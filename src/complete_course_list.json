[
  {
    "code": "CICS 110",
    "title": "Foundations of Programming",
    "instructors": "Cole Reilly, Jacob Urisman, Brett Mullins, Prit Pritam Shah, Aadam Anish Lokhandwala",
    "description": "An introduction to computer programming and problem solving using computers. This course teaches you how real-world problems can be solved computationally using programming constructs and data abstractions of a modern programming language. Concepts and techniques covered include variables, expressions, data types, objects, branching, iteration, functions, classes, and methods. We will also cover how to translate problems into a sequence of instructions, investigate the fundamental operation of a computational system and trace program execution and memory, and learn how to test and debug programs. No previous programming experience required. (Gen. Ed. R2) Prerequisite: R1 (or a score of 15 or higher on the math placement test Part A), or one of the following courses: MATH 101&102 or MATH 104 or MATH 127 or MATH 128 or MATH 131 or MATH 132. 4 credits.",
    "prerequisites": "R1 (or a score of 15 or higher on the math placement test Part A), or one of the following courses: MATH 101&102 or MATH 104 or MATH 127 or MATH 128 or MATH 131 or MATH 132",
    "credits": "4",
    "frequency": "Fall and Spring"
  },
  {
    "code": "CICS 127",
    "title": "Introduction to Public Interest Technology",
    "instructors": "Francine Berman",
    "description": "Today's world is complex and tech driven. How do we use the tools of information technology to solve problems in a socially responsible way, i.e., in a way that both empowers us and promotes the well-being of the communities in which we live? In this course, we describe the socio-technical world and pragmatic strategies for promoting personal and social responsibility. We explore the questions: What is the public interest in a socio-technical world? What strategies can we use to promote social responsibility in the public sector, private sector, and general public? What can each of us do to make the world a better place? This course is for everyone at all levels and with all interests. No programming or prerequisites are required. We focus on building skills to think analytically, broadly, and strategically, as well as to communicate effectively about complex problems with societal impact. Assignments will provide students multiple paths to success. Counts towards the IT minor and is required for the PIT Undergraduate Certificate. (Gen. Ed. SI) 4 credits.",
    "prerequisites": "N/A",
    "credits": "4",
    "frequency": "Spring"
  },
  {
    "code": "CICS 160",
    "title": "Object-Oriented Programming",
    "instructors": "Jaime Davila, Cole Reilly",
    "description": "This course will expose students to programming practices beyond the introductory level, concentrating on Object Oriented Programming techniques and an introduction to Data Structures. Students will also study and analyze the complexity of both the algorithms presented in class and of the algorithms they develop. This course also provides experience with the development and analysis of recursive algorithms and programs. Before taking this course, students are expected to have been exposed to the following concepts through a college-level course or equivalent in some high level computer programming language: input and output operations, conditional statements, loops, arrays, recursion, and functions/methods. The course places an emphasis on the careful design and testing of programs. (Gen. Ed. R2) Prerequisite: CICS 110 (previously INFO 190S) or COMPSCI 121 with a grade of C or better. 4 credits.",
    "prerequisites": "CICS 110 (previously INFO 190S) or COMPSCI 121 with a grade of C or better",
    "credits": "4",
    "frequency": "Fall and Spring"
  },
  {
    "code": "CICS 208",
    "title": "Defending Democracy in a Digital World",
    "instructors": "Ethan Zuckerman",
    "description": "This course explores the significance of the public sphere - from pamphlets, newspapers and letters to radio, television, the internet and social media - and its relationship to participatory, democratic society. Moving back and forth between the history of the public sphere and contemporary debates about the tensions between media and democracy, students will learn why democracies prescribe protected roles of the media, how media manipulation plays a role in politics, and how media spaces serve as deliberative spaces. Students will write short reaction papers to the readings, which will be used to shape class discussions, and a longer final paper, focused on applying the theories of the public sphere to regulation of contemporary online spaces. This course does not count toward CS or INFORM Major requirements. Cross-listed with COMM/SPP 208. (Gen. Ed. SB) 3 credits.",
    "prerequisites": "N/A",
    "credits": "3",
    "frequency": "Fall"
  },
  {
    "code": "CICS 210",
    "title": "Data Structures",
    "instructors": "Mordecai Golin, Timothy Richards",
    "description": "An introduction to the design, analysis, and implementation of data structures. This course teaches you how to build, test, debug, document, and evaluate objects that encapsulate data and their associated operations using programming constructs and data abstractions of a modern programming language. Concepts and techniques covered include linear and non-linear structures, recursive structures and algorithms, traversal algorithms, binary search trees, balanced trees, priority queues, union-find, hash tables, bloom filters, and graphs. We will also informally compare and contrast the run time efficiency of algorithms and their performance characteristics including the concept of worst-case running time analysis and the classification of algorithms in terms of constant, logarithmic, linear, log linear, quadratic, and exponential time using Big-O notation. (Gen. Ed. R2) Prerequisite: CICS 160 (previously INFO 190T) with a grade of C or better. 4 credits.",
    "prerequisites": "CICS 160 (previously INFO 190T) with a grade of C or better",
    "credits": "4",
    "frequency": "Fall and Spring"
  },
  {
    "code": "CICS 237",
    "title": "Introduction to Research in the Discipline",
    "instructors": "Neena Thota",
    "description": "The Introduction to Research in the Discipline course is part of the CICS Early Research Scholars Program (ERSP). It provides a group-based, dual-mentored research structure designed to provide a supportive and inclusive first research experience for a large number of early-career Computer Science and Informatics majors. 2 credits.",
    "prerequisites": "N/A",
    "credits": "2",
    "frequency": "Fall"
  },
  {
    "code": "CICS 256",
    "title": "Make: A Hands-on Introduction to Physical Computing",
    "instructors": "Stefan Krastanov",
    "description": "Inspired by the Maker movement, this course provides a hands-on introduction to physical computing: sensing and responding to the physical world using computers. Specific topics include: basic electronics and circuit design, microcontroller programming using Arduinos, sensing and responding to the physical world, rapid prototyping (3D printing and laser cutting etc.), soft circuits and wearable electronics. The course will encourage and empower students to invent, design, and build practical hardware projects that interact with the physical world. This course has a required lab section, and counts as one of the CS Lab Science Requirement courses for the BS-CS. Prerequisite: CICS 210 (or COMPSCI 187) with a grade of C or better and completion of the R1 (Basic Math Skills) Gen. Ed. 4 credits.",
    "prerequisites": "CICS 210 (or COMPSCI 187) with a grade of C or better and completion of the R1 (Basic Math Skills) Gen",
    "credits": "4",
    "frequency": "Fall and Spring"
  },
  {
    "code": "CICS 291C",
    "title": "Seminar - Finding your Strengths and Designing your Career",
    "instructors": "Casey Maloney",
    "description": "This course is designed to prepare CICS students for their internship and job searches, improve their professional skills (both technical and soft) and help them approach professional development and/or advanced educational opportunities with confidence. 1 credit.",
    "prerequisites": "N/A",
    "credits": "1",
    "frequency": null
  },
  {
    "code": "CICS 291T",
    "title": "Seminar - CICS Transfer Success",
    "instructors": "Emma Anderson",
    "description": "This seminar is intended to help you become fully prepared to succeed in CICS at UMass. Students in this seminar will be led by an instructor with a detailed understanding of the transfer student experience, and supported by various staff members in CICS. You will learn about which campus and College resources will be most helpful to you, how to best utilize these resources, and where you can look for other opportunities to connect. 1 credit.",
    "prerequisites": "N/A",
    "credits": "1",
    "frequency": null
  },
  {
    "code": "CICS 298A",
    "title": "Practicum - Leadership: Communicating Across Expertise",
    "instructors": "Emma Anderson, Ruchi Gupta",
    "description": "No matter where you end up in tech, you will need to explain concepts, products and ideas to people with different technical backgrounds. This course is intended to help prepare you for these communication tasks. Through the lens of tutoring, we will work on explaining technical ideas clearly and compassionately to others. We will do some theoretical study, including a history of CS education as well asbrain and learning science, and some practice, including tutoring beginning students in CS. This course is intended for a broad range of students looking to pursue careers in tech, but will be particularly useful for those who are currently UCAs or intending to apply for UCA positions in the future. Prerequisite: a grade of C or better in CICS 160, COMPSCI 186, COMPSCI 187, or CICS 210. 1 credit.",
    "prerequisites": "a grade of C or better in CICS 160, COMPSCI 186, COMPSCI 187, or CICS 210",
    "credits": "1",
    "frequency": null
  },
  {
    "code": "CICS 305",
    "title": "Social Issues in Computing",
    "instructors": "Erin Butler, Elizabeth Gunther, Siobhan Meï, Justin Obara, Matthew Ross, Christina Sutcliffe",
    "description": "Through a careful analysis and discussion of a range of computing issues, topics, and polices, we will explore various impacts of computers on modern society. This class satisfies the Junior Year Writing requirement by providing directed practice and specific instruction in a range of writing genres. Students will produce approximately 20-25 pages of polished written work over the course of the semester. CICS Primary Majors only. Prerequisite: CS Majors: ENGLWRIT 112 with a grade of C or better (or English Writing waiver), COMPSCI 220, COMPSCI 230 and COMPSCI 240 (or 250); INFORM Majors: ENGLWRIT 112 with a grade of C or better (or English Writing waiver) and INFO 248. 3 credits.",
    "prerequisites": "CS Majors: ENGLWRIT 112 with a grade of C or better (or English Writing waiver), COMPSCI 220, COMPSCI 230 and COMPSCI 240 (or 250); INFORM Majors: ENGLWRIT 112 with a grade of C or better (or English Writing waiver) and INFO 248",
    "credits": "3",
    "frequency": "Fall and Spring"
  },
  {
    "code": "CICS 580",
    "title": "Introduction to Numerical Computing with Python",
    "instructors": "STAFF",
    "description": "This course is an introduction to computer programming for numerical computing. The course is based on the computer programming language Python and is suitable for students with no programming or numerical computing background who are interested in taking courses in machine learning, natural language processing, or data science. The course will cover fundamental programming, numerical computing, and numerical linear algebra topics, along with the Python libraries that implement the corresponding data structures and algorithms. The course will include hands-on programming assignments and a project. No prior programming experience is required. Familiarity with undergraduate-level probability, statistics and linear algebra is assumed. Does not count toward graduate degrees. Open to Graduate students only. 1 credit.",
    "prerequisites": "N/A",
    "credits": "1",
    "frequency": "Fall"
  },
  {
    "code": "COMPSCI 119",
    "title": "Introduction to Programming",
    "instructors": "Devdhar Patel",
    "description": "A complete introduction to computer programming using the Python language. Topics include coverage of all the supported data types and program code structures, functions (up through lambda expressions and recursion), reasoning about and debugging existing code, implementation of custom libraries, selection of data structures, and the fundamentals of object-oriented programming. Students will create, debug, and run Python 3 programs that explore each of these topics in turn, from simple loops up through the processing of large data sets, and eventually to the creation of professional-quality libraries to synthesize graphics images and audio files. No prior programming experience expected. Not open to Computer Science majors. 3 credits.",
    "prerequisites": "N/A",
    "credits": "3",
    "frequency": "Fall and Spring"
  },
  {
    "code": "COMPSCI 198C",
    "title": "Practicum - Introduction to the C Programming Language",
    "instructors": "Meng-Chieh Chiu, Timothy Richards",
    "description": "This practicum assumes general background and experience in computer programming (such as that provided by COMPSCI 121 or a similar introductory programming course) and some knowledge of data structures. Content will include basic C data types, declarations, expressions, statements, and functions; simple use of macros; some common library calls (such as formatted input/output); basic pointer manipulation using linked lists; and introduction to using standard tools (gcc and make). A required prerequisite for COMPSCI 230, effective Fall 2023. Prerequisite: CICS 160 (previously INFO 190T or COMPSCI 186 or CICS 210) with a grade of C or better, or COMPSCI 121 with a grade of B or better. 1 credit.",
    "prerequisites": "CICS 160 (previously INFO 190T or COMPSCI 186 or CICS 210) with a grade of C or better, or COMPSCI 121 with a grade of B or better",
    "credits": "1",
    "frequency": "Fall and Spring"
  },
  {
    "code": "COMPSCI 220",
    "title": "Programming Methodology",
    "instructors": "Marius Minea",
    "description": "Development of individual skills necessary for designing, implementing, testing and modifying larger programs, including: design strategies and patterns, using functional and object-oriented approaches, testing and program verification, code refactoring, interfacing with libraries. There will be significant programming and mid-term and final examinations. Prerequisite: CICS 210 (or COMPSCI 187) with a grade of C or better. 4 credits.",
    "prerequisites": "CICS 210 (or COMPSCI 187) with a grade of C or better",
    "credits": "4",
    "frequency": "Fall and Spring"
  },
  {
    "code": "COMPSCI 230",
    "title": "Computer Systems Principles",
    "instructors": "Phuthipong Bovornkeeratiroj, Meng-Chieh Chiu",
    "description": "Large-scale software systems like Google - deployed over a world-wide network of hundreds of thousands of computers - have become a part of our lives. These are systems success stories - they are reliable, available (\"up\" nearly all the time), handle an unbelievable amount of load from users around the world, yet provide virtually instantaneous results. On the other hand, many computer systems don't perform nearly as well as Google - hence the now-clich \"the system is down.\" In this class, we study the scientific principles behind the construction of high-performance, scalable systems. The course begins with a discussion of C data representation, and moves up the stack from there to the features of modern architectures, assembly languages, and operating system services such as I/O, process, and synchronization. This class assumes students have either taken COMPSCI 198C or have equivalent experience in the C programming language. Prerequisite: CICS 210 (or COMPSCI 187) with a grade of C or better and COMPSCI 198C. 4 credits.",
    "prerequisites": "CICS 210 (or COMPSCI 187) with a grade of C or better and COMPSCI 198C",
    "credits": "4",
    "frequency": "Fall and Spring"
  },
  {
    "code": "COMPSCI 240",
    "title": "Reasoning Under Uncertainty",
    "instructors": "Mark Wilson",
    "description": "Development of mathematical reasoning skills for problems that involve uncertainty. Each concept will be illustrated by real-world examples and demonstrated through in-class and homework exercises. Counting and probability -- basic counting problems, probability definitions, mean, variance, binomial distribution, discrete random variables, continuous random variables, Markov and Chebyshev bounds, Laws of large numbers, and central limit theorem. Probabilistic reasoning -- conditional probability and odds, Bayes' Law, Markov Chains, Bayesian Networks. Statistical topics such as estimation of parameters and linear regression, as time permits. Prerequisite: CICS 160 (previously INFO 190T or COMPSCI 187) or CICS 210 and MATH 132, all with a grade of C or better. 4 credits.",
    "prerequisites": "CICS 160 (previously INFO 190T or COMPSCI 187) or CICS 210 and MATH 132, all with a grade of C or better",
    "credits": "4",
    "frequency": "Fall and Spring"
  },
  {
    "code": "COMPSCI 250",
    "title": "Introduction to Computation",
    "instructors": "David Barrington, Mordecai Golin",
    "description": "Basic concepts of discrete mathematics useful to computer science: set theory, strings and formal languages, propositional and predicate calculus, relations and functions, basic number theory. Induction and recursion: interplay of inductive definition, inductive proof, and recursive algorithms. Graphs, trees, and search. Finite-state machines, regular languages, nondeterministic finite automata, Kleene's Theorem. Problem sets, 2 midterm exams, timed final. Prerequisite: CICS 160 (previously INFO 190T or COMPSCI 187 or E&C-ENG 241, or CICS 210) and MATH 132, all with a grade of C or better. 4 credits.",
    "prerequisites": "CICS 160 (previously INFO 190T or COMPSCI 187 or E&C-ENG 241, or CICS 210) and MATH 132, all with a grade of C or better",
    "credits": "4",
    "frequency": "Fall and Spring"
  },
  {
    "code": "COMPSCI 311",
    "title": "Introduction to Algorithms",
    "instructors": "Marius Minea, Daniel Sheldon",
    "description": "This course will introduce you to a variety of techniques to design algorithms, such as divide and conquer, greedy, dynamic programming, and network flow. You will learn to study the performance of various algorithms within a formal, mathematical framework. You will also learn how to design very efficient algorithms for many kinds of problems and recognize problems that currently do not have efficient algorithms. Assignments may include programming: you should be able to program in Java, C, or some other closely related language. Mathematical experience (as provided by COMPSCI 250) is required. This course is required for the CS Major (BS) and counts as a CS Elective for the CS Major (BA). Prerequisite: CICS 210 (OR COMPSCI 187) , and either COMPSCI 250 or MATH 455, all with a grade of C or better. 4 credits.",
    "prerequisites": "CICS 210 (OR COMPSCI 187) , and either COMPSCI 250 or MATH 455, all with a grade of C or better",
    "credits": "4",
    "frequency": "Fall and Spring"
  },
  {
    "code": "COMPSCI 320",
    "title": "Introduction to Software Engineering",
    "instructors": "Gordon Anderson, Jaime Davila, Matthew Rattigan",
    "description": "In this course, students learn and gain practical experience with software engineering principles and techniques. The practical experience centers on a semester-long team project in which a software development project is carried through all the stages of the software life cycle. Topics in this course include requirements analysis, specification, design, abstraction, programming style, testing, maintenance, communication, teamwork, and software project management. Particular emphasis is placed on communication and negotiation skills and on designing and developing maintainable software. Use of computer required. Several written assignments, in-class presentations, and a term project. This course satisfies the IE Requirement and counts as a CS Elective for the CS Major. Prerequisite: COMPSCI 220 with a grade of C or better. 4 credits.",
    "prerequisites": "COMPSCI 220 with a grade of C or better",
    "credits": "4",
    "frequency": "Fall and Spring"
  },
  {
    "code": "COMPSCI 325",
    "title": "Introduction to Human Computer Interaction",
    "instructors": "Narges Mahyar",
    "description": "Human-Computer Interaction design is \"design for human use\". Computers are a ubiquitous part of many interactions in our lives, from the mundane everydayness of light switches and \"smart\" vending machines to entertainment and education to sophisticated instruments and complex energy and defense systems. In this course, we will challenge you to broaden your grasp of what a user interface can and should be, and try your hand at doing better yourself. It is a fast-paced, hands-on, project-based experience that will challenge many of your ideas of what computer science is and can be. It is designed around active lecture sessions supported by readings, working classes, and team projects, where students practice and explore the concepts introduced in lecture, and go well beyond them to learn and apply HCI techniques that build into group projects. More specifically, the course adopts a human-centered design (HCD) approach and teaches a highly iterative process called design thinking. The design thinking process draws heavily on the fundamentals of human-computer interaction (HCI) methods. I also cover design methodologies, evaluation methodologies (both quantitative and qualitative), human information processing, cognition, and perception. This course counts as a CS Elective toward the CS Major and as a Required Core for the INFORM Major. Open to juniors and seniors in Computer Science or Informatics. Prerequisite: Prerequisites: COMPSCI 187 (or CICS 210) with a grade of C or better OR INFO 248 and COMPSCI 186 (or 187 or CICS 160;INFO 190T) with a grade of C or better. 3 credits.",
    "prerequisites": "Prerequisites: COMPSCI 187 (or CICS 210) with a grade of C or better OR INFO 248 and COMPSCI 186 (or 187 or CICS 160;INFO 190T) with a grade of C or better",
    "credits": "3",
    "frequency": "Fall and Spring"
  },
  {
    "code": "COMPSCI 326",
    "title": "Web Programming",
    "instructors": "Meng-Chieh Chiu",
    "description": "The web is arguably today's most important application platform. Web browsers run on practically every device, and even many phone applications are in fact web applications under the covers. This course will cover a broad range of client-side web technologies, including HTTP itself, HTML5, CSS, and JavaScript; it will additionally cover key concepts for the server side of web applications, including key value stores and SQL servers. This course will also cover key concepts and technologies including AJAX, JavaScript libraries (e.g., jQuery), and web security. This course is hands-on and heavily project-based; students will construct a substantial dynamic web application based on the concepts, technologies, and techniques presented during lectures and in readings. This course satisfies the IE Requirement and an Elective for both the CS and INFORM Majors. Note: as the name web programming denotes, programming is a key component of this class. Previous background in JavaScript is strongly recommended. Prerequisite: COMPSCI 220 (or COMPSCI 230) with a grade of C or better. 4 credits.",
    "prerequisites": "COMPSCI 220 (or COMPSCI 230) with a grade of C or better",
    "credits": "4",
    "frequency": "Fall and Spring"
  },
  {
    "code": "COMPSCI 328",
    "title": "Mobile Health Sensing and Analytics",
    "instructors": "Phuc Nguyen",
    "description": "The typical smartphone comes equipped with a plethora of sensors for monitoring activity, speech patterns, social interactions, and location. In addition, mobile accessories such as wearable wristbands now enable routine and continuous monitoring of a host of physiological signals (e.g., heart rate, respiratory rate, oxygen saturation, and others.). In conjunction, these sensors can enable higher-order inferences about more complex human activities/behavioral states (e.g., activity patterns, stress, sleep, social interactions, etc.). Such ubiquitous sensing in daily life, referred to as mobile health sensing, promises to revolutionize our understanding of human activities and health conditions. This course is a hands-on introduction to personal health sensing through mobile phones. Please note that this is a *programming-heavy* class so a solid programming background is required. All programming assignments are in Python, so programming experience with *Python* is recommended. This course counts as an Elective for the CS Major. Prerequisite: CS MAJORS: CICS 210 (or COMPSCI 187) with a grade of C or better; INFORM MAJORS: INFO 248 and CICS 160 (previously INFO 190T or COMPSCI 186 or COMPSCI 187), all with a grade of C or better 3 credits.",
    "prerequisites": "CS MAJORS: CICS 210 (or COMPSCI 187) with a grade of C or better; INFORM MAJORS: INFO 248 and CICS 160 (previously INFO 190T or COMPSCI 186 or COMPSCI 187), all with a grade of C or better 3 credits",
    "credits": "3",
    "frequency": "Fall"
  },
  {
    "code": "COMPSCI 335",
    "title": "Inside the Box: How Computers Work",
    "instructors": "Charles Weems",
    "description": "How does the computer actually work? In this course we peel away the layers of abstraction and look at how switches become logic circuits, how logic circuits do math, and how programs really execute. We will wire up some simple examples of logic, then move on to programming an embedded ARM processor in a mix of assembly language and C, interfacing with various I/O devices and sensors, to experience what happens when machine code executes. We will also see the impact of hidden acceleration mechanisms like caches, pipelines, and branch predictors. This course counts as a CS Elective for the CS Major. Open to senior and junior Computer Science majors only. Prerequisite: Prerequisite: COMPSCI 220 or 230 with a grade of 'C' or better. 3 credits.",
    "prerequisites": "Prerequisite: COMPSCI 220 or 230 with a grade of 'C' or better",
    "credits": "3",
    "frequency": "Fall"
  },
  {
    "code": "COMPSCI 345",
    "title": "Practice and Applications of Data Management",
    "instructors": "Gordon Anderson",
    "description": "Computing has become data-driven, and databases are now at the heart of commercial applications. The purpose of this course is to provide a comprehensive introduction to the use of data management systems within the context of various applications. The emphasis is on relational databases, though non-relational databases are also introduced. Some of the covered topics include the relational data model, data retrieval, application-driven database design, schema refinement, implementation of basic transactions, database security. This course counts as a CS Elective for the CS Major. Students who have completed COMPSCI 445 are not eligible to take this course without instructor permission. Prerequisite: CS MAJORS: CICS 210 (or COMPSCI 187) with a grade of C or better. INFORM MAJORS: INFO 248 and CICS 160 (previously INFO 190T or COMPSCI 186 or COMPSCI 187), all with a grade of C or better. 3 credits.",
    "prerequisites": "CS MAJORS: CICS 210 (or COMPSCI 187) with a grade of C or better",
    "credits": "3",
    "frequency": "Fall and Spring"
  },
  {
    "code": "COMPSCI 360",
    "title": "Introduction to Computer and Network Security",
    "instructors": "Eugene Bagdasarian",
    "description": "This course provides an introduction to the principles and practice of computer and network security. A focus on both fundamentals and practical information will be stressed. The three key topics of this course are cryptography, privacy, and network security. Subtopics include ciphers, hashes, key exchange, security services (integrity, availability, confidentiality, etc.), security attacks, vulnerabilities, anonymous communications, and countermeasures. This course counts as a CS Elective for the CS Major. Prerequisite: COMPSCI 230 with a grade of C or better. 3 credits.",
    "prerequisites": "COMPSCI 230 with a grade of C or better",
    "credits": "3",
    "frequency": "Fall"
  },
  {
    "code": "COMPSCI 363",
    "title": "Computer Crime Law",
    "instructors": "Marvin Cable",
    "description": "A study, analysis, and discussion of the legal issues related to crimes involving computers and networks, including topical actions by dissidents and governments. We will also study the technologies of forensic investigation, intelligence gathering, privacy enhancement, and censorship resistance. Our main legal topics will include recent and important case law, statutes, and constitutional clauses concerning authorization, access, search and seizure, wiretaps, the right to privacy, and FISA. Our technology topics will include methods of investigation and resistance in the context of the Internet and Cellular networks. Students are assumed to have no background in legal concepts. Students will be required to complete substantial legal readings, complete significant written analysis of rulings, learn about technologies in detail, and participate in lively class discussion. This course counts as a CS Elective for the CS Major.Open to senior and junior Computer Science majors only. Prerequisite: Prerequisite: COMPSCI 230 with a grade of 'C' or better AND either ENGLWRIT 112 (with a grade of 'C' or better) or the completion of the 'CW' General Education requirement. 3 credits.",
    "prerequisites": "Prerequisite: COMPSCI 230 with a grade of 'C' or better AND either ENGLWRIT 112 (with a grade of 'C' or better) or the completion of the 'CW' General Education requirement",
    "credits": "3",
    "frequency": null
  },
  {
    "code": "COMPSCI 365",
    "title": "Digital Forensics",
    "instructors": "Brian Levine",
    "description": "The goal of forensics is to gather artifacts for refinement into evidence that supports or refutes a hypothesis about an alleged crime or policy violation. Done correctly, forensics represents the application of science to law. The techniques can also be abused to thwart privacy. This course is a broad introduction to forensic investigation of digital information and devices. We cover the acquisition, analysis, and courtroom presentation of information from file systems, operating systems, networks, mobile applications, and the like. Students do not need experience with these systems. We review the use of some professional tools, however, the primary goal of the course is to understand why and from where artifacts are recoverable in these systems. Most assignments involve coding forensic tools. For a small portion of the class, we cover some relevant issues from the law, privacy, and current events. Thus, the class serves the well-rounded student who is eager to participate in class discussion on a variety of technical and social issues. This course counts as an Elective toward the CS and INFORM Majors. Prerequisite: COMPSCI 230. 3 credits.",
    "prerequisites": "COMPSCI 230",
    "credits": "3",
    "frequency": null
  },
  {
    "code": "COMPSCI 367",
    "title": "Reverse Engineering and Understanding Exploit Development",
    "instructors": "Lurene Grenier",
    "description": "Many software developers aren't aware of how to properly write secure code. This course covers practical skills in reverse engineering and binary exploitation, and examines the techniques used by hackers in recent major security incidents. The course objective is to provide students with a strong understanding of attack patterns, and to ensure students implement more secure coding practices in their own code. This course begins with an introduction to Intel-based assembly, reverse engineering, vulnerability analysis, and various forms of Linux-focused binary exploitation. The course then covers stack, heap and Linux kernel-based exploitation, and dive into common defensive mitigations such as ASLR, NX and Stack Cookies alongside techniques to bypass each of them. This course is focused on low-level software written in C. COMPSCI 230 is sufficient for demonstrating knowledge of C and that the student has been introduced to assembly. Students who have taken 198C (or can demonstrate a proficiency in C) and can demonstrate a familiarity with assembly can request an override from the instructor. This course counts as a CS Elective for the CS Major, but does not count as an INFORM Elective. Prerequisite: COMPSCI 230 (or E&C-ENG 322 or E&C-ENG 373) with a grade of C or better, or permission of instructor. 3 credits.",
    "prerequisites": "COMPSCI 230 (or E&C-ENG 322 or E&C-ENG 373) with a grade of C or better, or permission of instructor",
    "credits": "3",
    "frequency": null
  },
  {
    "code": "COMPSCI 377",
    "title": "Operating Systems",
    "instructors": "Phuthipong Bovornkeeratiroj",
    "description": "In this course we examine the important problems in operating system design and implementation. The operating system provides a well-known, convenient, and efficient interface between user programs and the bare hardware of the computer on which they run. The operating system is responsible for allowing resources (e.g., disks, networks, and processors) to be shared, providing common services needed by many different programs (e.g., file service, the ability to start or stop processes, and access to the printer), and protecting individual programs from one another. The course will start with a brief historical perspective of the evolution of operating systems over the last fifty years, and then cover the major components of most operating systems. This discussion will cover the tradeoffs that can be made between performance and functionality during the design and implementation of an operating system. Particular emphasis will be given to three major OS subsystems: process management (processes, threads, CPU scheduling, synchronization, and deadlock), memory management (segmentation, paging, swapping), file systems, and operating system support for distributed systems. Programming projects in C. This course counts as a CS Elective for the CS Major. Prerequisite: COMPSCI 230 with a grade of C or better. 4 credits.",
    "prerequisites": "COMPSCI 230 with a grade of C or better",
    "credits": "4",
    "frequency": "Fall and Spring"
  },
  {
    "code": "COMPSCI 383",
    "title": "Artificial Intelligence",
    "instructors": "William McNichols",
    "description": "This course aims to give students a high level understanding of the prominent AI topics that are being employed in industry today. It will provide an introduction to each topic, an overview of its supporting algorithms, and examples of products powered by the technology. Particular emphasis will be had on Machine Learning and developing hands-on practical skills with this technology. Upon completion of this course, students will obtain a wider scope of understanding about modern AI trends in software technology and develop an intuition for how this software works. To succeedin this course, students will need a fundamental understanding of data structures and programming fundamentals. Graph and tree data structures will be used in particular. Programming assignments in this class will be done using Python. Experience in at least one programming language is required and it s strongly recommended you have some Python experience before starting. A mathematical foundation in statistics and linear algebra is not strictly necessary but will deepen understanding of course material. This course counts as an Elective for CS and INFORM Majors. Prerequisite: CS MAJORS: CICS 210 and COMPSCI 240 (or STATISTC 315, previously STATISTC 515), all with a grade of C or better; INFORM MAJORS: INFO 348 and STATISTC 315 (previously STATISTC 515), all with a grade of C or better. 3 credits.",
    "prerequisites": "CS MAJORS: CICS 210 and COMPSCI 240 (or STATISTC 315, previously STATISTC 515), all with a grade of C or better; INFORM MAJORS: INFO 348 and STATISTC 315 (previously STATISTC 515), all with a grade of C or better",
    "credits": "3",
    "frequency": "Fall and Spring"
  },
  {
    "code": "COMPSCI 389",
    "title": "Introduction to Machine Learning",
    "instructors": "Philip Thomas",
    "description": "The course provides an introduction to machine learning algorithms and applications, and is intended for students with no prior experience with machine learning. Students with prior experience in machine learning or who are already passionate about the subject are encouraged to take COMPSCI 589 instead. Machine learning algorithms answer the question: \"How can a computer improve its performance based on data and from its own experience?\" The course is roughly divided into thirds: supervised learning (learning from labeled data), reinforcement learning (learning via trial and error), and real-world considerations like ethics, safety, and fairness. Specific topics include linear and non-linear regression, (stochastic) gradient descent, neural networks, backpropagation, classification, Markov decision processes, state-value and action-value functions, temporal difference learning, actor-critic algorithms, the reward prediction error hypothesis for dopamine, connectionism for philosophy of mind, and ethics, safety, and fairness considerations when applying machine learning to real-world problems. This course counts as an Elective for the CS and INFORM Majors. Prerequisite: COMPSCI 220 (or COMPSCI 230), COMPSCI 240 (or STATISTC 315/515), and MATH 233, all with a grade of C or better. 3 credits.",
    "prerequisites": "COMPSCI 220 (or COMPSCI 230), COMPSCI 240 (or STATISTC 315/515), and MATH 233, all with a grade of C or better",
    "credits": "3",
    "frequency": "Spring"
  },
  {
    "code": "COMPSCI 403",
    "title": "Introduction to Robotics: Perception, Mechanics, Dynamics, and Control",
    "instructors": "Donghyun Kim",
    "description": "This course covers the concepts and methods needed to understand how to move robots and make them interact with the physical world. We will study theoretical backgrounds and techniques to describe the configuration and state of a robot and to control its motion. The topics that will be covered in the lectures include the representation of three-dimensional movement, mechanisms (kinematics and dynamics), actuators, and dynamics-based feedback control. Students will also learn to use Google Colab and Python programming to build simulation and analysis tools. This course counts as a CS Elective for the CS Major. Prerequisite: MATH 235 and COMPSCI 220 (or COMPSCI 230) all with a grade of C or better. 3 credits.",
    "prerequisites": "MATH 235 and COMPSCI 220 (or COMPSCI 230) all with a grade of C or better",
    "credits": "3",
    "frequency": "Spring"
  },
  {
    "code": "COMPSCI 420",
    "title": "Software Entrepreneurship",
    "instructors": "Matthew Rattigan",
    "description": "This course is geared towards students interested in developing software that moves from early stage proof-of-concept ideas towards marketable products with societal benefit. The course leverages the expertise of the Entrepreneurs in Residence (EIR) of the Ventures @ CICS initiative at CICS. The course is grounded in Challenge Based Learning (CBL), an active, student-directed instructional framework that was developed by Apple Inc. and educators. This course counts as a Elective for the CS and INFORM Majors. Prerequisite: COMPSCi 320 (or COMPSCI 326) with a grade of C or better. 3 credits.",
    "prerequisites": "COMPSCi 320 (or COMPSCI 326) with a grade of C or better",
    "credits": "3",
    "frequency": "Fall and Spring"
  },
  {
    "code": "COMPSCI 426",
    "title": "Scalable Web Systems",
    "instructors": "Timothy Richards",
    "description": "The web has become a large and complex area for application development. Access to an abundance of open source languages, libraries, and frameworks has led to the quick and easy construction of a variety of applications with several moving parts working in coordination to present to the user the illusion of a single program. In reality, web applications are extremely difficult to get right. They involve a large collection of coordinated services, multiple databases, complicated user interfaces, security and performance issues, and ever changing 3rd party services, spread across physical and virtual machines. These complications are further stressed by the large number of concurrent users that access these applications every second. This course will investigate several well known web-based applications and the technology and software architecture used to scale these applications. We will also study a specific topic related to scalability in software design in the context of web application architecture. This course counts as an Elective for the CS and INFORM Majors. Prerequisite: COMPSCI 320 or COMPSCI 326 with a grade of C or better. 3 credits.",
    "prerequisites": "COMPSCI 320 or COMPSCI 326 with a grade of C or better",
    "credits": "3",
    "frequency": "Fall"
  },
  {
    "code": "COMPSCI 429",
    "title": "Software Engineering Project Management",
    "instructors": "Gordon Anderson, Jaime Davila, Matthew Rattigan",
    "description": "The purpose of this course is to provide students with practical experience in the management of software development projects. Students in this course will gain this experience by serving as software development team technical managers for teams of software engineering students in COMPSCI 320. As project managers, the students in COMPSCI 429 will be responsible for: supervising and managing the work of teams of COMPSCI 320 students; interfacing with the other COMPSCI 429 students managing other teams in the course; interfacing with the course instructor, course TA, and course customer. COMPSCI 429 students will be assigned readings in software engineering project management to provide a theoretical basis for their work in this course. But the majority of work in the course will be related to the actual management of assigned development teams. As team managers, COMPSCI 429 students will set goals and schedules for their teams, track and report team progress, negotiate with leaders of other teams and the course customer, and evaluate the work of members of their teams. COMPSCI 429 course assignments may include: written team goals, plans and schedules; periodic reports on team progress; documentation of agreements reached with other team leaders and customers; evaluations of the applicability of theoretical papers to the work of this course. This course will meet at the same times and places as COMPSCI 320. Additional meetings with team members and other students in COMPSCI 429 are also expected to be arranged by mutual agreement. An additional one hour weekly meeting of all of the students in COMPSCI 429 is required. This course counts as a CS Elective for the CS Major. Enrollment in this course is only by permission of the instructor, and is restricted to students who have previously taken COMPSCI 320, and received a grade of B or better. 3 credits.",
    "prerequisites": "N/A",
    "credits": "3",
    "frequency": "Fall and Spring"
  },
  {
    "code": "COMPSCI 445",
    "title": "Information Systems",
    "instructors": "Trek Palmer",
    "description": "This course is an introduction to the efficient management of large-scale data. The course includes principles for representing information as structured data, query languages for analyzing and manipulating structured data, and core systems principles that enable efficient computation on large data sets. Classical relational database topics will be covered (data modeling, SQL, query optimization, concurrency control), as well as semi-structured data (XML, JSON), and distributed data processing paradigms (e.g. MapReduce and Spark). Additional application topics may include web application development, data integration, processing data streams, database security and privacy. This course counts as an Elective toward the CS Major. Prerequisite: COMPSCI 220 (or 230) and COMPSCI 311 and COMPSCI 345 with a grade of C or better. 3 credits.",
    "prerequisites": "COMPSCI 220 (or 230) and COMPSCI 311 and COMPSCI 345 with a grade of C or better",
    "credits": "3",
    "frequency": "Fall and Spring"
  },
  {
    "code": "COMPSCI 446",
    "title": "Search Engines",
    "instructors": "Razieh Rahimi",
    "description": "This course provides an overview of the important issues in information retrieval, and how those issues affect the design and implementation of search engines. The course emphasizes the technology used in Web search engines, and the information retrieval theories and concepts that underlie all search applications. Mathematical experience (as provided by COMPSCI 240) is required. You should also be able to program in Java or Python (other closely related languages may be acceptable). This course counts as a CS Elective for the CS Major. Prerequisite: COMPSCI 240 or COMPSCI 383 with a grade of C or better. 3 credits.",
    "prerequisites": "COMPSCI 240 or COMPSCI 383 with a grade of C or better",
    "credits": "3",
    "frequency": "Fall and Spring"
  },
  {
    "code": "COMPSCI 453",
    "title": "Computer Networks",
    "instructors": "Arun Venkataramani",
    "description": "This course provides an introduction to fundamental concepts in the design and implementation of computer networks, their protocols, and applications with a particular emphasis on the Internet's TCP/IP protocol suite. Topics to be covered include: overview of network architectures, applications, network programming interfaces (e.g., sockets), transport, congestion, routing, and data link protocols, addressing, local area networks, wireless networks, network security, and network management. There will be five or six homeworks, two programming projects, several hands-on labs (that require an Internet-connected personal computer) and two exams. This course counts as a CS Elective for the CS Major. Prerequisite: Experience programming; COMPSCI 230 (or COMPSCI 377) with a grade of C or better. 3 credits.",
    "prerequisites": "Experience programming; COMPSCI 230 (or COMPSCI 377) with a grade of C or better",
    "credits": "3",
    "frequency": "Fall and Spring"
  },
  {
    "code": "COMPSCI 461",
    "title": "Secure Distributed Systems",
    "instructors": "Gregory Stone",
    "description": "This is a class devoted to the study of securing distributed systems, with blockchain-based cryptocurrencies serving as our real platform of interest. We'll start with the fundamentals of Lamport's, Fischer's, and Douceur's results that fence-in all consensus system, and discuss Byzantine fault tolerance. We'll also look at the efficiency of the network architectures for peer-to-peer/distributed system communication and attacks on their security, such as denial of service attacks. And we'll review relevant applied cryptography such as elliptic curves. We ll discuss in detail the mechanisms of Bitcoin and Ethereum and we ll program distributed applications for Ethereum. Other topics include economics and finance. Assignments will include programming projects and reading research papers. The grade is also based on exams and participation in discussion. The course is based on a flipped classroom and uses a hybrid instruction model. Some of the course content is delivered online, however students are required to attend weekly class meetings. This course counts as a CS Elective for the CS Major, as well an Any 2 menu choice for the former Security & Privacy track. Open to Computer Science majors only. Prerequisite: COMPSCI 326, COMPSCI 345, COMPSCI 377, COMPSCI 453, or COMPSCI 497P with a grade of C or better. 3 credits.",
    "prerequisites": "COMPSCI 326, COMPSCI 345, COMPSCI 377, COMPSCI 453, or COMPSCI 497P with a grade of C or better",
    "credits": "3",
    "frequency": "Fall"
  },
  {
    "code": "COMPSCI 485",
    "title": "Applications of Natural Language Processing",
    "instructors": "Brendan O'Connor",
    "description": "This course will introduce NLP methods and applications, such as text classification, sentiment analysis, machine translation, and other applications to identify and use the meaning of text. During the course, students will (1) learn fundamental methods and algorithms for NLP; (2) become familiar with key facts about human language that motivate them, and help practitioners know what problems are possible to solve; and (3) complete a series of hands-on projects to use, implement, experiment with, and improve NLP tools. This course counts as a CS Elective for the CS Major. Prerequisite: COMPSCI 220 and COMPSCI 240 with a grade of C or better, or LINGUIST 429B (previously LINGUIST 492B) with a grade of C or better. 3 credits.",
    "prerequisites": "COMPSCI 220 and COMPSCI 240 with a grade of C or better, or LINGUIST 429B (previously LINGUIST 492B) with a grade of C or better",
    "credits": "3",
    "frequency": "Fall"
  },
  {
    "code": "COMPSCI 514",
    "title": "Algorithms for Data Science",
    "instructors": "Andrew McGregor",
    "description": "With the advent of social networks, ubiquitous sensors, and large-scale computational science, data scientists must deal with data that is massive in size, arrives at blinding speeds, and often must be processed within interactive or quasi-interactive time frames. This course studies the mathematical foundations of big data processing, developing algorithms and learning how to analyze them. We explore methods for sampling, sketching, and distributed processing of large scale databases, graphs, and data streams for purposes of scalable statistical description, querying, pattern mining, and learning. This course counts as a CS Elective for the CS Major. Undergraduate Prerequisite: COMPSCI 240 (or STATISTCS 315/515) and COMPSCI 311 both with a grade of B+ or better, or (COMPSCI 240 and STATISTCS 315/515 and COMPSCI 311 and MATH 233 and MATH 235, all with a C or better). 3 credits",
    "prerequisites": "COMPSCI 240 (or STATISTCS 315/515) and COMPSCI 311 both with a grade of B+ or better, or (COMPSCI 240 and STATISTCS 315/515 and COMPSCI 311 and MATH 233 and MATH 235, all with a C or better)",
    "credits": "3",
    "frequency": "Fall and Spring"
  },
  {
    "code": "COMPSCI 515",
    "title": "Algorithms, Game Theory and Fairness",
    "instructors": "Yair Zick",
    "description": "Recent years have seen a dramatic rise in the use of algorithms for solving problems involving strategic decision makers. Deployed algorithms now assist in a variety of economic interactions: assigning medical residents to schools, allocating students to courses, allocating security resources in airports, allocating computational resources and dividing rent. We will explore foundational topics at the intersection of economics and computation, starting with the foundations of game theory: Nash equilibria, the theory of cooperative games, before proceeding to covering more advanced topics: matching algorithms, allocation of indivisible goods, and mechanism design. Open to junior and senoir Computer Science students. This course counts as a CS Elective for the CS Major. Undergraduate Prerequisite: COMPSI 240 and 250 with a grade of C or better in both. 3 credits.",
    "prerequisites": "COMPSI 240 and 250 with a grade of C or better in both",
    "credits": "3",
    "frequency": "Fall"
  },
  {
    "code": "COMPSCI 520",
    "title": "Theory and Practice of Software Engineering",
    "instructors": "Heather Conboy",
    "description": "Introduces students to the principal activities and state-of-the-art techniques involved in developing high-quality software systems. Topics include: requirements engineering, formal specification methods, design principles & patterns, verification & validation, debugging, and automated software engineering. This course counts as a CS Elective for the CS Major. Undergraduate Prerequisite: COMPSCI 320 (or COMPSCI 220 and COMPSCI 326) with a grade of C or better. 3 credits.",
    "prerequisites": "COMPSCI 320 (or COMPSCI 220 and COMPSCI 326) with a grade of C or better",
    "credits": "3",
    "frequency": "Fall and Spring"
  },
  {
    "code": "COMPSCI 532",
    "title": "Systems for Data Science",
    "instructors": "Peter Klemperer",
    "description": "In this course, students will learn the fundamentals behind large-scale systems in the context of data science. We will cover the issues involved in scaling up (to many processors) and out (to many nodes) parallelism in order to perform fast analyses on large datasets. These include locality and data representation, concurrency, distributed databases and systems, performance analysis and understanding. We will explore the details of existing and emerging data science platforms, including MapReduce-Hadoop, Spark, and more. This course counts as a CS Elective for the CS Major. Undergraduate Prerequisite: COMPSCI 377 and COMPSCI 445 both with a grade of C or better. 3 credits.",
    "prerequisites": "COMPSCI 377 and COMPSCI 445 both with a grade of C or better",
    "credits": "3",
    "frequency": "Fall and Spring"
  },
  {
    "code": "COMPSCI 550",
    "title": "Introduction to Simulation",
    "instructors": "Peter Haas",
    "description": "How can we use computers to design systems and, more generally, make decisions, in the face of complexity and uncertainty? Simulation techniques apply the power of the computer to study complex stochastic systems when analytical or numerical techniques do not suffice. It is the most frequently used methodology for the design and evaluation of computer, telecommunication, manufacturing, healthcare, financial, and transportation systems, to name just a few application areas. Simulation is an interdisciplinary subject, incorporating ideas and techniques from computer science, probability, statistics, optimization, and number theory. Simulation models, which embody deep domain expertise, can effectively complement machine-learning approaches. This course will provide the student with a hands-on introduction into this fascinating and useful subject. This course counts as an Elective toward the CS Major. Undergraduate Prerequisites: CICS 210 (or COMPSCI 187) and STATISTC 515. 3 credits.",
    "prerequisites": "CICS 210 (or COMPSCI 187) and STATISTC 515",
    "credits": "3",
    "frequency": "Spring"
  },
  {
    "code": "COMPSCI 560",
    "title": "Introduction to Computer and Network Security",
    "instructors": "Parviz Kermani",
    "description": "This course provides an introduction to the principles and practice of computer and network security with a focus on both fundamental principles and practical applications through hands-on approach. Many of the principles are taught through examples. The key topics of this course are a brief introduction to computer networking; applied cryptography; protecting users, data, and services; network security, and common threats and defense strategies. Students will complete a number of practical lab assignments as well as auto-graded quizzes/assignments. This course counts as a CS Elective for the CS Major. Open to undergraduate COMPSCI and CS-ENG students Undergraduate Prerequisite: COMPSCI 453 or E&C-ENG 374 with a grade of C or better. 3 credits.",
    "prerequisites": "COMPSCI 453 or E&C-ENG 374 with a grade of C or better",
    "credits": "3",
    "frequency": "Fall"
  },
  {
    "code": "COMPSCI 563",
    "title": "Internet Law and Policy",
    "instructors": "Marvin Cable",
    "description": "This course is meant for those looking for legal knowledge for use in computing- and Internet-related endeavors. The course will include topics related to security, policy, and the use of machine learning and related technologies. In additional, students will be assigned law review articles and will learn to do legal research so that they can remain updated after the course ends. Topics covered are all in the context of the ubiquity of the Internet and computing, and they include: basic legal principles, contract law, substantive laws, intellectual property law, ethics, dealing with third parties, policy issues, and topical issues such as implications of applying machine learning technology. This course was formerly numbered as INFOSEC 690L. This course counts as a CS Elective for the CS Major. Open to junior and senior Computer Science students. Undergraduate Prerequisite: either COMPSCI 311, 383, or 360 (previously 460) with a grade of C or better. 3 credits.",
    "prerequisites": "either COMPSCI 311, 383, or 360 (previously 460) with a grade of C or better",
    "credits": "3",
    "frequency": "Fall"
  },
  {
    "code": "COMPSCI 565",
    "title": "Advanced Digital Forensic Systems",
    "instructors": "Peter Klemperer",
    "description": "This course introduces students to the principal activities and state-of-the-art techniques involved in developing digital forensics systems. Topics covered may include: advanced file carving and reconstruction, forensic analysis of modern filesystems, network forensics, mobile device forensics, memory forensics, and anti-forensics. This course counts as a CS Elective for the CS Major. Undergraduate Prerequisite: COMPSCI 365 or COMPSCI 377 with a grade of C or better. 3 credits.",
    "prerequisites": "COMPSCI 365 or COMPSCI 377 with a grade of C or better",
    "credits": "3",
    "frequency": "Spring"
  },
  {
    "code": "COMPSCI 576",
    "title": "Game Programming",
    "instructors": "STAFF",
    "description": "Game Programming introduces students to concepts of computer game development, including 2D and 3D modeling, character design, animation, game art, basic game AI, audio and video effects. The course will help students build the programming skills needed to turn ideas into games. Both runtime systems and the asset pipelines will be covered. Students will work on various game programming exercises with modern game engines and graphics APIs. This course counts as a CS Elective for the CS Major (BA or BS). Open to Computer Science juniors and seniors Undergraduate Prerequisites: COMPSCI 311 with a grade of C or better (or COMPSCI 250 with a grade of B+ or better) and received a grade of C or better in COMPSCI 220 and MATH 235. 3 credits.",
    "prerequisites": "COMPSCI 311 with a grade of C or better (or COMPSCI 250 with a grade of B+ or better) and received a grade of C or better in COMPSCI 220 and MATH 235",
    "credits": "3",
    "frequency": "Fall"
  },
  {
    "code": "COMPSCI 578",
    "title": "Distributed Computing and Systems",
    "instructors": "Arun Venkataramani",
    "description": "This course will teach the principles and practice of distributed systems as applied in today's cloud computing environments. The course will cover fundamental concepts in distributed computing including distributed clocks, consistency, fault tolerance, and consensus. The course will also cover popular cloud computing service models, related programming models, datacenter architectures, software-defined networking, and security and privacy issues in public clouds. The course will expose students to public cloud platforms such as Amazon EC2, Google Cloud Engine, Microsoft Azure etc. The assignments in the course will include a nontrivial programming component that assumes familiarity with multithreaded programming and network programming. This course counts as a CS Elective for the CS Major. Undergraduate Prerequisite: COMPSCI 377 or an equivalent first course in operating systems. 3 credits.",
    "prerequisites": "COMPSCI 377 or an equivalent first course in operating systems",
    "credits": "3",
    "frequency": "Odd Fall"
  },
  {
    "code": "COMPSCI 589",
    "title": "Machine Learning",
    "instructors": "Bruno Castro da Silva,",
    "description": "This course will introduce core machine learning models and algorithms for classification, regression, clustering, and dimensionality reduction. On the theory side, the course will focus on effectively using machine learning methods to solve real-world problems with an emphasis on model selection, regularization, and empirical evaluation. The assignments will involve both mathematical problems and implementation tasks. Knowledge of a high-level programming language is absolutely necessary. Python is most commonly used (along with standard libraries such as numpy, scipy, and scikit-learn), but languages such as Matlab, R, Scala, Julia would also be suitable. While this course has an applied focus, it still requires appropriate mathematical background in probability and statistics, calculus, and linear algebra. The prerequisites for undergrads were previously COMPSCI 383 and MATH 235 (COMPSCI 240 provides sufficient background in probability, and MATH 131/132 provide sufficient background in calculus). Graduate students can check the descriptions for these courses to verify that they have sufficient mathematical background for 589. Strong foundations in linear algebra, calculus, probability, and statistics are essential for successfully completing this course. Graduate students from outside computer science with sufficient background are also welcome to take the course. This course counts as a CS Elective for the CS Major. Undergraduate Prerequisite: MATH 545 and COMPSCI 240 and STATISTC 315/515 all with a grade of C or better. (MATH 545 can be skipped by students who have taken MATH 235 and MATH 233 both with B+ or better. STATISTC 315/515 can be skipped by students who have taken COMPSCI 240 with a B+ or better). 3 credits.",
    "prerequisites": "MATH 545 and COMPSCI 240 and STATISTC 315/515 all with a grade of C or better",
    "credits": "3",
    "frequency": "Fall and Spring"
  },
  {
    "code": "COMPSCI 590AF",
    "title": "Reverse Engineering and Understanding Exploit Development",
    "instructors": "Lurene Grenier",
    "description": "Many software developers aren't aware of how to properly write secure code. This course covers practical skills in reverse engineering and binary exploitation, and examines the techniques used by malicious adversaries in major security incidents. The course objective is to provide students with a strong understanding of attack patterns, and to ensure students implement more secure coding practices in their own code. This course begins with an introduction to Intel-based assembly, reverse engineering, vulnerability analysis, and various forms of Linux-focused binary exploitation. The course then covers stack, heap and Linux kernel-based exploitation, and dive into common defensive mitigations such as ASLR, NX and Stack Cookies alongside techniques to bypass each of them. This course counts as a CS Elective for the CS Major. Undergraduate Prerequisite: COMPSCI 230 (or E&C-ENG 322) with a grade of C or better. 3 credits.",
    "prerequisites": "COMPSCI 230 (or E&C-ENG 322) with a grade of C or better",
    "credits": "3",
    "frequency": "Spring"
  },
  {
    "code": "COMPSCI 596E",
    "title": "Independent Study - Machine Learning Applied to Child Rescue",
    "instructors": "Brian Levine",
    "description": "Students will work collaboratively to construct production-grade software used to advance the goal of Child Rescue. This course is a group-based, guided independent study. Our goal is to build practical machine learning models to be used by professionals dedicated to rescuing children from abuse. Students will be encouraged to design and build their own diagnostic and machine learning tools, while also learning from professionals in the fields of digital forensics and law enforcement. An emphasis is placed on practicing real world professional software engineering skills, such as dealing with limiting scope, productionisationconcerns, and working in the presence of poorly defined problems. The entire student group will meet once a week to share progress via short presentations. Open to senior Computer Science majors, MS-CMPSCI majors, and CS PhD students. 3 credits",
    "prerequisites": "N/A",
    "credits": "3",
    "frequency": null
  },
  {
    "code": "COMPSCI 601",
    "title": "Computation Theory",
    "instructors": "Hung Le",
    "description": "An in-depth introduction to the main models and concepts of the theory of computation, including: Computability: what problems can be solved in principle; Complexity: what problems can be solved in a given amount of time, space, parallel time; Logic: how do formal specification and proof mirror other forms of computation? Students will learn to go from a concrete problem to a mathematical model; and, after proving things about the mathematical model, to correctly interpret what they have learned about the concrete problem. Prerequisites: an undergraduate course in automata theory and formal languages such as COMPSCI 501 or permission of instructor. Course requirements: biweekly problem sets, midterm and final. Also open to qualified undergraduates. 3 credits.",
    "prerequisites": "an undergraduate course in automata theory and formal languages such as COMPSCI 501 or permission of instructor",
    "credits": "3",
    "frequency": null
  },
  {
    "code": "COMPSCI 602",
    "title": "Research Methods in Empirical Computer Science",
    "instructors": "David Jensen",
    "description": "This course introduces concepts, practices, and tools for conducting effective research. You will learn how to read technical papers, interpret published research, assess the research frontier, select research topics, devise research questions and hypotheses, propose and plan research activities, analyze experimental results, and report those results. The course is structured around five activities: (1) Synchronous and asynchronous lectures on basic research strategies and techniques; (2) Synchronous activities that apply course concepts; (3) Reading and discussions of technical papers in computer science; (4) An individual semester-long empirical research project; and (5) Review and feedback on other student's projects. The course requires significant reading, reviewing, and writing. Students are expected to participate actively in class activities and to provide meaningful comments on the work of other students. For PhD students, this course will help accelerate your current and future research. For MS students, this course will provide a grounding in research methods that will aid your entry into research-oriented industrial positions and PhD studies. For undergraduates considering graduate studies, this course will help inform and accelerate that direction. For undergraduates, this course can be used to satisfy the 499Y requirement for Departmental and Multidisciplinary Honors students whose theses or projects have a substantial empirical component. Undergraduates must obtain approval of the Computer Science Honors Program Director prior to registering. Open to graduate Computer Science students only. 3 credits.",
    "prerequisites": "N/A",
    "credits": "3",
    "frequency": "Fall"
  },
  {
    "code": "COMPSCI 611",
    "title": "Advanced Algorithms",
    "instructors": "Hedyeh Beyhaghi",
    "description": "Principles underlying the design and analysis of efficient algorithms. Topics to be covered include: divide-and-conquer algorithms, graph algorithms, matroids and greedy algorithms, randomized algorithms, NP-completeness, approximation algorithms, linear programming. Open to graduate Computer Science students only. Prerequisite: The mathematical maturity expected of incoming Computer Science graduate students, knowledge of algorithms at the level of COMPSCI 311. 3 credits.",
    "prerequisites": "The mathematical maturity expected of incoming Computer Science graduate students, knowledge of algorithms at the level of COMPSCI 311",
    "credits": "3",
    "frequency": "Fall and Spring"
  },
  {
    "code": "COMPSCI 635",
    "title": "Modern Computer Architecture",
    "instructors": "Charles Weems",
    "description": "This course examines the structure of modern computer systems. We explore recent research results that are influencing modern machine organizations, then consider specific features and their impact on software and performance. These may include superscalar issue, caches, pipelines, branch prediction, and parallelism. Research paper reading and in-class exercises. 3 credits.",
    "prerequisites": "N/A",
    "credits": "3",
    "frequency": "Odd Fall"
  },
  {
    "code": "COMPSCI 646",
    "title": "Information Retrieval",
    "instructors": "Razieh Rahimi",
    "description": "The course will cover basic and advanced techniques for text-based information systems. Topics covered include retrieval models, indexing and text representation, browsing and query reformulation, data-intensive computing approaches, evaluation, and issues surrounding implementation. The course will include a substantial project such as the implementation of major elements of search engines and applications. Open to Masters and PhD Computer Science students only. 3 credits.",
    "prerequisites": "N/A",
    "credits": "3",
    "frequency": "Fall"
  },
  {
    "code": "COMPSCI 648",
    "title": "Quantum Information Systems",
    "instructors": "Stefan Krastanov",
    "description": "Fundamentals of quantum information systems, including quantum computation, quantum cryptography, and quantum information theory. Topics include: quantum circuit model, qubits, unitary operators, measurement, entanglement, quantum algorithms for factoring and search, quantum key distribution, error-correction and fault-tolerance, information capacity of quantum channels, complexity of quantum computation. Open to Masters and PhD Computer Science students only. 3 credits.",
    "prerequisites": "N/A",
    "credits": "3",
    "frequency": "Fall"
  },
  {
    "code": "COMPSCI 660",
    "title": "Advanced Information Assurance",
    "instructors": "Amir Houmansadr",
    "description": "This course provides an in-depth examination of the fundamental principles of information assurance. While the companion course for undergraduates is focused on practical issues, the syllabus of this course is influenced strictly by the latest research. We will cover a range of topics, including authentication, integrity, confidentiality of distributed systems, network security, malware, privacy, intrusion detection, intellectual property protection, and more. Open to Masters and PhD Computer Science students only. 3 credits.",
    "prerequisites": "N/A",
    "credits": "3",
    "frequency": "Fall"
  },
  {
    "code": "COMPSCI 661",
    "title": "Secure Distributed Systems",
    "instructors": "Gregory Stone",
    "description": "This is a class devoted to the study of securing distributed systems, with blockchain-based cryptocurrencies serving as our real platform of interest. We'll start with the fundamentals of Lamport's, Fischer's, and Douceur's results that fence-in all consensus system, and discuss Byzantine fault tolerance. We'll also look at the efficiency of the network architectures for peer-to-peer/distributed system communication and attacks on their security, such as denial of service attacks. And we'll review relevant applied cryptography such as elliptic curves. We ll discuss in detail the mechanisms of Bitcoin and Ethereum and we ll program distributed applications for Ethereum. Other topics include economics and finance. Assignments will include programming projects and reading research papers. The grade is also based on exams and participation in discussion. The course is based on a flipped classroom . Open to Masters and PhD Computer Science students and Electrical + Computer Engineering students. 3 credits.",
    "prerequisites": "N/A",
    "credits": "3",
    "frequency": "Fall"
  },
  {
    "code": "COMPSCI 666",
    "title": "Theory and Practice of Cryptography",
    "instructors": "Adam O'Neill",
    "description": "This is a graduate-level introduction to cryptography, emphasizing formal definitions and proofs of security. Though the course is theoretical in nature, its viewpoint will be \"theory applied to practice.\" We will discuss cryptographic algorithms that are used in practice and how to reason about their security. More fundamentally, we will try to understand what security \"is\" in a rigorous way that allows us to follow sound cryptographic principles and uncover design weaknesses. Tentatively, we will cover: blockciphers, pseudorandom functions and permutations, symmetric encryption schemes and their security, hash functions, message authentication codes and their security, authenticated encryption schemes and protocols such as SSL/TLS, public-key encryption schemes and their security, digital signature schemes and their security, and public-key infrastructures. Open to graduate Computer Science students only. 3 credits.",
    "prerequisites": "N/A",
    "credits": "3",
    "frequency": "Fall"
  },
  {
    "code": "COMPSCI 670",
    "title": "Computer Vision",
    "instructors": "Grant Van Horn",
    "description": "This course will explore current techniques for the analysis of visual data (primarily color images). In the first part of the course we will examine the physics and geometry of image formation, including the design of cameras and the study of color sensing in the human eye. In each case we will look at the underlying mathematical models for these phenomena. In the second part of the course we will focus on algorithms to extract useful information from images. This includes detection of reliable interest points for applications such as image alignment, stereo and instance recognition; robust representations of images for recognition; and principles for grouping and segmentation. Time permitting we will look at some additional topics at the end of the course. Course assignments will highlight several computer vision tasks and methods. For each task you will construct a basic system, then improve it through a cycle of error analysis and model redesign. There will also be a final project, which will investigate a single topic or application in greater depth. This course assumes a strong background in probability, calculus, linear algebra, and Python. Prior experience in signal/image processing is useful but not required. Open to graduate Computer Science students only. 3 credits.",
    "prerequisites": "N/A",
    "credits": "3",
    "frequency": "Fall"
  },
  {
    "code": "COMPSCI 687",
    "title": "Reinforcement Learning",
    "instructors": "Bruno Castro da Silva",
    "description": "This course provides a thorough introduction and overview of reinforcement learning. Reinforcement learning algorithms repeatedly answer the question \"What should be done next?\", and they can learn via trial-and-error to answer these questions even when there is no supervisor telling the algorithm what the correct answer would have been. Applications of reinforcement learning span across medicine (How much insulin should be injected next? What drug should be given next?), marketing (What ad should be shown next?), robotics (How much power should be given to the motor?), game playing (What move should be made next?), environmental applications (Which countermeasure for an invasive species should be deployed next?), and dialogue systems (What type of sentence should be spoken next?), among many others. Broad topics covered in this course will include: Markov decision processes, reinforcement learning algorithms (model-based/model-free, batch/online, value function-based, actor-critics, policy gradient methods, etc.), and representations for reinforcement learning. Special topics may include ensuring the safety of reinforcement learning algorithms, hierarchical reinforcement learning, theoretical reinforcement learning, multi-agent reinforcement learning, and connections to animal learning. This course assumes a very strong mathematical background in calculus, linear algebra, and strategies for proving theorems. We will emphasize hands-on experience in class and through assignments, which will require implementing and applying many of the algorithms we discuss. Therefore, a strong background in programming is also necessary, as we will require that students implement sophisticated learning algorithms using C++ and/or Python. Finally, we assume that students have a background in machine learning (COMPSCI 589 or 689) and artificial intelligence (COMPSCI 683). Open to graduate Computer Science students only. 3 credits.",
    "prerequisites": "N/A",
    "credits": "3",
    "frequency": "Fall"
  },
  {
    "code": "COMPSCI 689",
    "title": "Machine Learning",
    "instructors": "Justin Domke",
    "description": "Machine learning is the computational study of artificial systems that can adapt to novel situations, discover patterns from data, and improve performance with practice. This course will cover the popular frameworks for learning, including supervised learning, reinforcement learning, and unsupervised learning. The course will provide a state-of-the-art overview of the field, emphasizing the core statistical foundations. Detailed course topics: overview of different learning frameworks such as supervised learning, reinforcement learning, and unsupervised learning; mathematical foundations of statistical estimation; maximum likelihood and maximum a posteriori (MAP) estimation; missing data and expectation maximization (EM); graphical models including mixture models, hidden-Markov models; logistic regression and generalized linear models; maximum entropy and undirected graphical models; nonparametric models including nearest neighbor methods and kernel-based methods; dimensionality reduction methods (PCA and LDA); computational learning theory and VC-dimension; reinforcement learning; state-of-the-art applications including bioinformatics, information retrieval, robotics, sensor networks and vision. Prerequisites: undergraduate level probability and statistics, linear algebra, calculus, AI; computer programming in some high level language. Open to graduate Computer Science students only 3 credits.",
    "prerequisites": "undergraduate level probability and statistics, linear algebra, calculus, AI; computer programming in some high level language",
    "credits": "3",
    "frequency": "Fall"
  },
  {
    "code": "COMPSCI 690F",
    "title": "Responsible Artificial Intelligence",
    "instructors": "Eugene Bagdasarian",
    "description": "In the era of intelligent assistants, autonomous agents, and self-driving cars we expect AI systems to not cause harm and withstand adversarial attacks. In this course you will learn advanced methods of building AI models and systems that mitigate privacy, security, societal, and environmental risks. We will go deep into attack vectors and what type of guarantees current research can and cannot provide for modern generative models. The course will feature extensive hands-on experience with model training and regular discussion of key research papers. Students are required to have taken NLP, general ML, and security classes before taking this course. 3 credits.",
    "prerequisites": "N/A",
    "credits": "3",
    "frequency": null
  },
  {
    "code": "COMPSCI 698W",
    "title": "Practicum - CS Research Writing Practicum",
    "instructors": "Justin Obara",
    "description": "This CS research writing class uses a workshop format to focus on structure and phrasing while engaging students in a process-based approach to writing. Instruction will emphasize genre and discourse analysis and engage students in activities to strengthen audience awareness. As such, students will analyze representative examples of computer science research writing for stylistic and argumentative conventions and then integrate the awareness of these conventions and moves into their own writing. Students will produce or substantially revise a complete piece of writing. 6 weeks. 1 credit.",
    "prerequisites": "N/A",
    "credits": "1",
    "frequency": "Fall"
  },
  {
    "code": "COMPSCI 879",
    "title": "Teaching Assistants as Tomorrow's Faculty",
    "instructors": "Ivon Arroyo",
    "description": "Teaching Assistants as Tomorrow's Faculty prepares Teaching Assistants (TAs) at the College of Information and Computer Sciences to fulfill their duties in an effective and pedagogically sound manner. The two credit (not repeatable) course is semester long and taken by all TAs prior to assuming assistantship. 2 credits.",
    "prerequisites": "N/A",
    "credits": "2",
    "frequency": "Fall and Spring"
  },
  {
    "code": "COMPSCI 891M",
    "title": "Seminar - Theory of Computation",
    "instructors": "Yair Zick",
    "description": "The theory seminar is a weekly meeting in which topics of interest in the theory of computation - broadly construed - are presented. This is sometimes new research by visitors or local people. It is sometimes work in progress, and it is sometimes recent material of others that some of us present in order to learn and share. This seminar may be taken repeatedly for credit up to six times. 1 credit.",
    "prerequisites": "N/A",
    "credits": "1",
    "frequency": "Fall and Spring"
  },
  {
    "code": "COMPSCI H335",
    "title": "Honors Colloquium for Inside the Box: How Computers Work",
    "instructors": "Charles Weems",
    "description": "Honors section students are expected to meet weekly with the instructor. These meetings can be a combination of lecture, student research presentations, project progress reports, discussions, demonstrations of work, and problem solving. Students define their own program of enrichment, which will typically be either a research project or a project to develop an application of embedded systems. Students may work individually or in teams. Grading is based upon participation in the weekly meetings and the quality of the finished project. Prerequisite: Students must be enrolled in COMPSCI 335. 1 credit.",
    "prerequisites": "Students must be enrolled in COMPSCI 335",
    "credits": "1",
    "frequency": null
  },
  {
    "code": "COMPSCI H446",
    "title": "Honors Colloquium for Search Engines",
    "instructors": "James Allan",
    "description": "This course is an honors colloquium for COMPSCI 446. Students will explore and discuss topics from the 446 curriculum in greater detail, with an intended focus on contemporary issues related to search engines -- for example, large language models, fairness, and/or explainability. Students will also collaboratively design programming project that builds on the programming project from 446. All students will produce a final report and may implement the expanded programming project to replace part of that report. Required reading (available free via a UMass subscription): Michael D. Ekstrand, Anubrata Das, Robin Burke and Fernando Diaz (2022), Fairness in Information Access Systems , Foundations and Trends© in Information Retrieval: Vol. 16, No. 1-2, pp 1 177. DOI: 10.1561/1500000079. Additional readings from open-source and freely available material may be used. 1 credit.",
    "prerequisites": "N/A",
    "credits": "1",
    "frequency": null
  },
  {
    "code": "COMPSCI H589",
    "title": "Honors Colloquium for Machine Learning",
    "instructors": "Benjamin Marlin",
    "description": "This colloquium will enrich the primary course by focusing on reading, presenting, and discussing foundational and recent research papers from the machine learning literature. Students will write weekly reading responses, and lead one to two group discussions over the course of the semester. Prerequisite: Students must be enrolled in or have completed COMPSCI 589. 1 credit.",
    "prerequisites": "Students must be enrolled in or have completed COMPSCI 589",
    "credits": "1",
    "frequency": null
  },
  {
    "code": "INFO 101",
    "title": "Introduction to Informatics",
    "instructors": "Michelle Trim",
    "description": "An introduction to the main concepts of Informatics. There are several 'Big Ideas' in computing, including but not limited to abstraction, data and information, algorithms, programming, the internet, and the global impacts of computing. This class provides an introduction to those ideas and considers some of the ways that those computing principles might be used to solve real world problems. Computer-based assignments are an integral part of this course but no programming knowledge or prior programming experience is expected or required. Open to undergraduate students NOT majoring in Computer Science. 3 credits.",
    "prerequisites": "N/A",
    "credits": "3",
    "frequency": null
  },
  {
    "code": "INFO 150",
    "title": "A Mathematical Foundation for Informatics",
    "instructors": "Chloe Becquey",
    "description": "Mathematical techniques useful in the study of computing and information processing. The mathematical method of definition and proof. Sets, functions, and relations. Combinatorics, probability and probabilistic reasoning. Graphs and trees as models of data and of computational processes. Prerequisite: R1 math skills recommended. Not intended for Computer Science majors students interested in a majors-level treatment of this material should see COMPSCI 240 and 250 (or MATH 455). 3 credits.",
    "prerequisites": "R1 math skills recommended",
    "credits": "3",
    "frequency": null
  },
  {
    "code": "INFO 203",
    "title": "A Networked World",
    "instructors": "Mohammadhassan Hajiesmaili",
    "description": "The course will cover the technical foundations of today s communication networks, particularly the Internet. It will also address key social, policy, economic and legal aspects of these networks, their use (and abuse), and their regulation. This course covers computer science topics, but all material will be presented in a way that is accessible to an educated audience with or without a strong technical background. Not intended for Computer Science majors students interested in a CS majors-level treatment of this material should see COMPSCI 453. 3 credits.",
    "prerequisites": "N/A",
    "credits": "3",
    "frequency": null
  },
  {
    "code": "INFO 248",
    "title": "Introduction to Data Science",
    "instructors": "Gordon Anderson",
    "description": "This course is an introduction to the concepts and skills involved with the collection, management, analysis, and presentation of data sets and the data products that result from the work of data scientists. Privacy, algorithmic bias and ethical issues are also discussed. Students will work with data from the financial, epidemiological, educational, and other domains. The course provides examples of real-world data that students work with using various software tools. This course consists of two lecture meetings and one lab meeting per week. Readings will be assigned as preparation for each class meeting. A semester project will be assigned. Students work in pairs to develop their project over the semester. The project provides students with an opportunity to work collaboratively to explore the topics in more depth in a specialized domain. A midterm and final exam will be given. Grades are determined by a combination of scores on lab activities, projects, and exam scores. Software: all software is freely available. Open to INFORM majors. Prerequisite: a grade of C or or above in the following courses: CICS 110 (or CICS 160 or COMPSCI 119 or COMPSCI 121) with a grade of C or above and either: PSYCH 240, OIM 240, STATISTC 240, RES-ECON 212, SOCIOL 212, OR STATISTC 315/515, OR COMPSCI 240, with a grade of C or above. 4 credits.",
    "prerequisites": "a grade of C or or above in the following courses: CICS 110 (or CICS 160 or COMPSCI 119 or COMPSCI 121) with a grade of C or above and either: PSYCH 240, OIM 240, STATISTC 240, RES-ECON 212, SOCIOL 212, OR STATISTC 315/515, OR COMPSCI 240, with a grade of C or above",
    "credits": "4",
    "frequency": null
  },
  {
    "code": "INFO 324",
    "title": "Introduction to Clinical Health Informatics",
    "instructors": "Sunghoon Lee",
    "description": "This course aims to introduce the fundamentals of Clinical Health Informatics to prepare students as forerunners of the future of digital health care systems. More specifically, this course aims to teach students the fundamentals of and tools for quantitative analysis of clinical health data and the practical application of the tools on various health data. The detailed components of the course are as follows. Following an overview of the clinical health informatics industry, the course covers a broad range of introductory topics, including the structure of current health care systems, types of health data, the theory and practical use of quantitative analytic methodologies, and ethics related to healthcare. More specifically, this course will introduce key health informatics technologies and standards, including electronic health records, medical claims data, imaging data, free-text clinical notes, patient-reported outcomes, traditional and machine learning-based analytic algorithms, data visualization, and clinical research and experimental procedures. Note, however, that the course is not designed to introduce new types of machine learning or artificial intelligence algorithms for health-related data. This course is taught in the same classroom with students from COMPSCI 524. However, students enrolled in INFO 324 will be evaluated independently of students from COMPSCI 524. This course fulfills a concentration core requirement for the Health and Life Sciences track, and it can be used to fulfill an elective requirement for the Data Science concentration of the Informatics major. Open to INFORM majors. Prerequisite: Prerequisite: INFO 248 (or STATISTIC 315;515 or COMPSCI 240) with a grade of C or better. 4 credits.",
    "prerequisites": "Prerequisite: INFO 248 (or STATISTIC 315;515 or COMPSCI 240) with a grade of C or better",
    "credits": "4",
    "frequency": null
  },
  {
    "code": "INFO 348",
    "title": "Data Analytics with Python",
    "instructors": "Jayant Taneja",
    "description": "The modern world is awash with data, and making sense of it requires specialized skills. This course will expose students to commonly used data analytics techniques. Topics include the acquisition, manipulation, and transformation of structured data, exploratory data analysis, data visualization, and predictive modeling. Students in this course will learn and use the Python programming language and tools for working with data. Analysis will be performed using real data sets. Does not count as a CS Elective (BA or BS). Satisfies one of the Data Science Concentration requirements and counts as an elective for the Health and Life Sciences Concentration for the Informatics major. Open to INFORM majors. Prerequisite: INFO 248 and CICS 160 (or INFO 190T or COMPSCI 186 or 187), both with a grade of C or better. 3 credits.",
    "prerequisites": "INFO 248 and CICS 160 (or INFO 190T or COMPSCI 186 or 187), both with a grade of C or better",
    "credits": "3",
    "frequency": null
  },
  {
    "code": "INFO 390C",
    "title": "Introduction to Computational Biology and Bioinformatics",
    "instructors": "Anna Green",
    "description": "This course is designed to provide Informatics students with a broad, practical introduction to the field of computational biology and bioinformatics. The course will discuss at a high level the models and algorithms used to analyze biological sequence data, as well as practical applications and data analysis. Background in biology is not assumed. The primary focus of the course will be analysis of genomic data, including sequence alignment, genome assembly, genome annotation, phylogeny construction, mutation effect prediction, population genetics, RNA-seq data analysis, and genotype-phenotype association studies. Throughout the course, we will emphasize the unique challenges to working with biological data. Through lectures and hands-on programming problem sets, students will develop the necessary skills to tackle computational challenges in biology. This course counts as a CS Elective toward the CS Major and as an Elective toward the INFORM Major. Open to juniors and seniors in Computer Science or Informatics. Prerequisites: A grade of C or better in INFO 248 or a grade of C or better in both CICS 210 and COMPSCI 240 3 credits.",
    "prerequisites": "A grade of C or better in INFO 248 or a grade of C or better in both CICS 210 and COMPSCI 240 3 credits",
    "credits": "3",
    "frequency": null
  },
  {
    "code": "CICS 109",
    "title": "Introduction to Data Analysis in R",
    "instructors": "Jasper McChesney",
    "description": "An introduction to data analysis in the open-source R language, with an emphasis on practical data work. Topics will include data wrangling, summary statistics, modeling, and visualization. Will also cover fundamental programming concepts including data types, functions, flow of control, and good programming practices. Intended for a broad range of students outside of computer science. Some familiarity with statistics is expected. 1 credit.",
    "prerequisites": "N/A",
    "credits": "1",
    "frequency": "Spring"
  },
  {
    "code": "CICS 291S",
    "title": "Seminar - CICS Second Year Pathways",
    "instructors": "Erfan Entezami",
    "description": "This seminar will give students the opportunity to learn more about the different areas and career pathways in computer science, through guest lectures by professors and grad students, reading research papers, and coordination with CICS Careers. It is intended to be taken alongside any COMPSCI 200-level core course. Prerequisite: CICS 210 (or COMPSCI 187) with a grade of C or better. 1 credit.",
    "prerequisites": "CICS 210 (or COMPSCI 187) with a grade of C or better",
    "credits": "1",
    "frequency": null
  },
  {
    "code": "CICS 396A",
    "title": "Independent Study - Directed Research Group",
    "instructors": "Neena Thota",
    "description": "This course is part of the CICS Early Research Scholars Program (ERSP). It provides a group-based, dual-mentored research structure designed to be supportive and inclusive first research experience for a large number of early-career Computer Science and Informatics majors. Students can apply and be accepted to the program at the end of their first year (spring term). After successfully completing the Introduction to Research in the Discipline course in the fall, they are then enrolled in this course in the spring of the second year. This course may count as a major elective for CS and INFORM majors with UPD approval, subject to program rules that apply to independent study courses. 3 credits.",
    "prerequisites": "N/A",
    "credits": "3",
    "frequency": "Spring"
  },
  {
    "code": "CICS 590P",
    "title": "Technology Policy and Innovation to Serve the Common Good",
    "instructors": "Emily Nutwell, Carolina Rossini",
    "description": "In this course, we will introduce Public Interest Technology, innovation, and relevant regulatory frameworks to provide a foundation to explore the thoughtful design of technology that can serve society while remaining safe for all users and stakeholders. The course begins with examining the core values of public interest technology, such as fairness, transparency, accountability, and inclusivity. We will then review foundational concepts around innovation and strategies, along with an overview of technology governance. An overview of product development models, focusing on Agile product development will be presented along with a presentation of tech governance within an Agile framework. We will then analyze case studies where technologies have either succeeded or failed to uphold these values, examining the societal impact of emerging technologies like artificial intelligence (AI), self-driving cars, digital platforms, and data-driven systems. Throughout the semester, guest lectures from leaders in the fields of technology policy, innovation, and governance will offer insights into how you can bridge the gap between regulatory goals and technological creativity in your future careers. This course counts as an Elective for the CS and INFORM Majors. Cross-listed with SPP 590P. Undergraduate Prerequisite: CICS 305 with a grade of C or better. 3 credits.",
    "prerequisites": "CICS 305 with a grade of C or better",
    "credits": "3",
    "frequency": null
  },
  {
    "code": "COMPSCI 348",
    "title": "Principles of Data Science",
    "instructors": "David Jensen",
    "description": "Data science uses various concepts, practices, algorithms, and systems to extract knowledge and insights from data. It encompasses techniques from machine learning, statistics, databases, visualization, and several other fields. When properly integrated, these techniques can help human analysts make sense of vast stores of digital information. This course presents the fundamental principles of data science, familiarizes students with the technical details of representative algorithms, and connects these concepts to applications in industry, science, and government, including fraud detection, marketing, scientific discovery, and web mining. The course assumes that students are familiar with basic concepts and algorithms from probability and statistics. This course counts as a CS Elective toward the CS Major. Prerequisites: CICS 210 (or COMPSCI 187), COMPSCI 240, and COMPSCI 250 (or MATH 455). 3 credits.",
    "prerequisites": "CICS 210 (or COMPSCI 187), COMPSCI 240, and COMPSCI 250 (or MATH 455)",
    "credits": "3",
    "frequency": "Spring"
  },
  {
    "code": "COMPSCI 370",
    "title": "Introduction to Computer Vision",
    "instructors": "Subhransu Maji",
    "description": "This introductory computer vision class will address fundamental questions about getting computers to \"see\" like humans. We investigate questions such as -What is the role of vision in intelligence? -How are images represented in a computer? -How can we write algorithms to recognize an object? -How can humans and computers \"learn to see better\" from experience? We will write a number of basic computer programs to do things like recognize handwritten characters, track objects in video, and understand the structure of images. This course counts as a CS Elective for the CS Major. Prerequisite: COMPSCI 240 or 383 with a grade of C or better. 3 credits.",
    "prerequisites": "COMPSCI 240 or 383 with a grade of C or better",
    "credits": "3",
    "frequency": null
  },
  {
    "code": "COMPSCI 373",
    "title": "Introduction to Computer Graphics",
    "instructors": "Rui Wang",
    "description": "This course introduces the fundamental concepts of 2D and 3D computer graphics. It covers the basic methods for modeling, rendering, and imaging. Topics include: image processing, 2D/3D modeling, 3D graphics pipeline, WebGL, shading, texture mapping, ray tracing, 3D printing. Throughout the class, we will teach students to learn modern graphics techniques, to model the visual world algorithmically, and to implement algorithms using JavaScript. Students who have taken COMPSCI 473 are not eligible to take this course. Students cannot take COMPSCI 497C after taking this course. This course counts as a CS Elective for the CS Major. Prerequisite: CICS 210 (or COMPSCI 187) and MATH 235 (or INFO 150 or COMPSCI 240) with a grade of C or better. 3 credits.",
    "prerequisites": "CICS 210 (or COMPSCI 187) and MATH 235 (or INFO 150 or COMPSCI 240) with a grade of C or better",
    "credits": "3",
    "frequency": null
  },
  {
    "code": "COMPSCI 390B",
    "title": "Harnessing Data Science for Societal Good",
    "instructors": "Abhidip Bhattacharyya",
    "description": "This is a project-based course in which students will explore using large-scale datasets and data analysis to address real-world societal problems in domains such as sustainability, health, and work with different techniques of data analysis and processing. Students will address problems of societal or industrial relevance. Each semester, the course will offer one or more real-world datasets and a selection of sample problems and students will define a project based on these datasets to address a real-word problem in a group setting. Students will collaborate in groups for their project. Students will explore modern data processing tools and software systems to build data processing pipelines for their chosen project. Throughout the course, students will be expected to present their project ideas, develop project proposals outlining their implementation plans, and conclude with a final presentation and report submission. This course provides students with the opportunity to integrate their analytical and collaborative skills for real-world problem-solving. This course counts as an Elective for the CS and INFORM Majors. Prerequisite: COMPSCI 230 and COMPSCI 240 (or STATISTC 315/515), all with a grade of C or better. 3 credits.",
    "prerequisites": "COMPSCI 230 and COMPSCI 240 (or STATISTC 315/515), all with a grade of C or better",
    "credits": "3",
    "frequency": "Spring"
  },
  {
    "code": "COMPSCI 466",
    "title": "Applied Cryptography",
    "instructors": "Adam O'Neill",
    "description": "This is an undergraduate-level introduction to cryptography. It is a theory course with a significant mathematical component. However, our viewpoint will be theory applied to practice in that we will aim to treat topics in a way of applied value. We will discuss cryptographic algorithms used in practice and how to reason about their security. More fundamentally, we will try to understand what security is in a rigorous way that allows us to follow sound principles and uncover design weaknesses. The primary topics are: blockciphers, pseudorandom functions, symmetric-key encryption schemes, hash functions, message authentication codes, public-key encryption schemes, digital signature schemes, and public-key infrastructures. This course counts as a CS Elective toward the CS Major. Prerequisite: COMPSCI 311 with a grade of C or better. 3 credits.",
    "prerequisites": "COMPSCI 311 with a grade of C or better",
    "credits": "3",
    "frequency": "Spring"
  },
  {
    "code": "COMPSCI 491G",
    "title": "Seminar - Computer Networking Lab",
    "instructors": "Parviz Kermani",
    "description": "In this course, students will learn how to put \"principles into practice,\" in a hands-on-networking lab course. The course will cover router, switches and end-system labs in the areas of Single Segment IP Networks, Multiple Segment IP Networks and Static Routing, Dynamic Routing Protocols (RIP, OSPF and BGP), LAN switching, Transport Layer Protocols: UDP and TCP, NAT, DHCP, DNS, and SNMP. Students will also get engaged in evaluating power consumption of network components as an aid in the design of energy efficient (green) networks. This course counts as a CS Elective for the CS Major. Prerequisite: COMPSCI 453 with a grade of C or better. 3 credits.",
    "prerequisites": "COMPSCI 453 with a grade of C or better",
    "credits": "3",
    "frequency": "Spring"
  },
  {
    "code": "COMPSCI 496C",
    "title": "Independent Study - Social Entrepreneurship Launchpad",
    "instructors": "Matthew Rattigan",
    "description": "Social Entrepreneurship Launchpad offers a team-based opportunity to students whoare committed to launching marketable products that contribute to the common good. Teams test the commercial potential of their product ideas and receive mentoring and guidance fromCICS Entrepreneurs in Residence (EIRs) and industry partners to secure funding, build a marketing plan, and consolidate a customer base. The course is open by permission of instructor to students who have successfully completed either completed COMPSCI 420 or have equivalent academic or industry experience. This course does not count as either a CS or INFORM Elective. Prerequisite: COMPSCI 420 with a grade of C or better. 3 credits.",
    "prerequisites": "COMPSCI 420 with a grade of C or better",
    "credits": "3",
    "frequency": null
  },
  {
    "code": "COMPSCI 496D",
    "title": "Indepedent Study - Machine Learning Applied to Child Rescue",
    "instructors": "Brian Levine",
    "description": "Students will work collaboratively to construct production-grade software used to advance the goal of Child Rescue. This course is a group-based, guided independent study. Our goal is to build software that leverages practical machine learning models to be used by professionals dedicated to rescuing children from abuse. Students will be encouraged to design and build their own diagnostic and machine learning tools, while also learning from professionals in the fields of digital forensics and law enforcement. An emphasis is placed on practicing real world professional software engineering skills, such as dealing with limiting scope, productionisation concerns, and working in the presence of poorly defined problems. Students report on their progress each week and typically work in pairs. Attendance is mandatory. This course counts as a CS Elective for the CS Major. 3 credits.",
    "prerequisites": "N/A",
    "credits": "3",
    "frequency": null
  },
  {
    "code": "COMPSCI 501",
    "title": "Formal Language Theory",
    "instructors": "David Barrington",
    "description": "Introduction to formal language theory. Topics include finite state languages, context-free languages, the relationship between language classes and formal machine models, the Turing Machine model of computation, theories of computability, resource-bounded models, and NP-completeness. This course counts as a CS Elective for the CS Major. Undergraduate Prerequisite: COMPSCI 311 with a grade of C or better. It is recommended that students have a B- or better in 311 in order to attempt 501. 3 credits.",
    "prerequisites": "COMPSCI 311 with a grade of C or better",
    "credits": "3",
    "frequency": "Spring"
  },
  {
    "code": "COMPSCI 508",
    "title": "Ethical Considerations in Computing",
    "instructors": "Michelle Trim",
    "description": "This course considers an array of ethical issues in computing. Readings and class discussions will cover ethical questions related to artificial intelligence, privacy online, identity in computing, electronic surveillance, environmental responsibility, internet censorship, network policy, algorithmic systems, information access, ownership of intellectual property in computing contexts and others. All examples will be drawn from current and recent events with readings from a range of sources both journalistic and academic. Course assignments will have real world applications and offer students opportunities for developing their speaking and writing skills. Class discussions will be a vibrant component of the course. This course counts as an Elective for the CS and INFORM Majors. 3 credits.",
    "prerequisites": "N/A",
    "credits": "3",
    "frequency": "Spring"
  },
  {
    "code": "COMPSCI 535",
    "title": "Computer Architecture",
    "instructors": "Charles Weems",
    "description": "The structure of digital computers is studied at several levels, from the basic logic level, to the component level, to the system level. Topics include: the design of basic components such as arithmetic units and registers from logic gates; the organization of basic subsystems such as the memory and I/O subsystems; the interplay between hardware and software in a computer system; the von Neumann architecture and its performance enhancements such as cache memory, instruction and data pipelines, coprocessors, and parallelism. Semester team project to design an architecture and develop a software simulation of it. This course counts as a CS Elective for the CS Major. Undergraduate Prerequisite: COMPSCI 335 with a grade of C or better. 3 credits.",
    "prerequisites": "COMPSCI 335 with a grade of C or better",
    "credits": "3",
    "frequency": "Spring"
  },
  {
    "code": "COMPSCI 546",
    "title": "Applied Information Retrieval",
    "instructors": "Hamed Zamani",
    "description": "COMPSCI 546 is a graduate level course intended to cover information retrieval and other information processing activities, from an applied perspective. There will be numerous programming projects and assignments. It provides a richer technical follow on to COMPSCI 446 (Search Engines) for undergraduates interested in a deeper understanding of the technologies. It also provides a strong basis for continuing on with COMPSCI 646 (Information Retrieval) for those graduate students who are interested in a more complete theoretical coverage of the area. Topics will include: search engine construction (document acquisition, processing, indexing, and querying); learning to rank; information retrieval system performance evaluation; classification and clustering; other machine learning information processing tasks (e.g. basic deep learning models for information retrieval); and many more. This course counts as a CS Elective for the CS Major. Undergraduate Prerequisite: COMPSCI 320 (or COMPSCI 326) and COMPSCI 383 (or COMPSCI 389 or COMPSCI 446 or COMPSCI 485 or COMPSCI 585) all with a grade of C or better. 3 credits.",
    "prerequisites": "COMPSCI 320 (or COMPSCI 326) and COMPSCI 383 (or COMPSCI 389 or COMPSCI 446 or COMPSCI 485 or COMPSCI 585) all with a grade of C or better",
    "credits": "3",
    "frequency": "Spring"
  },
  {
    "code": "COMPSCI 561",
    "title": "System Defense and Test",
    "instructors": "Parviz Kermani",
    "description": "This class trains students to detect and analyze weaknesses and vulnerabilities in target systems as a method of assessing the security of a system. We focus on tools and techniques that an attacker would employ but from the perspective of an ethical system administrator. Topics include tools and techniques for penetration testing and attacks, information gathering, social engineering, and defenses. Specific topics include malware, denial of service attacks, SQL injection, buffer overflow, session hijacking, and system hacking, network sniffing and scans, wireless encryption weaknesses and other WiFi issues, IDS/firewall evasion, metasploit tools, physical security, and setting up honeypots. Previously INFOSEC 690S. This course counts as a CS Elective for the CS Major. Undergraduate Prerequisite: COMPSCI 360 (or COMPSCI 460 or COMPSCI 560 or COMPSCI 660 or E&C-ENG 371) and COMPSCI 453 (or E&C-ENG 325), all with a grade of C or better. 3 credits.",
    "prerequisites": "COMPSCI 360 (or COMPSCI 460 or COMPSCI 560 or COMPSCI 660 or E&C-ENG 371) and COMPSCI 453 (or E&C-ENG 325), all with a grade of C or better",
    "credits": "3",
    "frequency": "Spring"
  },
  {
    "code": "COMPSCI 564",
    "title": "Cyber Effects: Reverse Engineering, Exploit Analysis, and Capability Development",
    "instructors": "Jeffrey Hamalainen, Seth Landsman, Nick Merlino, Corre Steele, Edward Walters, Adam Woodbury",
    "description": "This course covers a broad range of topics related to cyber security and operations. Our focus is on real world studies of reverse engineering, exploit analysis, and capability development within the context of computer network operations and attack. The course has an emphasis on hands-on exercises and projects. Topics covered include computer architecture and assembly language, principles of embedded security, the essentials of exploit development and analysis (including using industry standard tools such as Ghidra, and utilizing computer security databases such as CVE), and discussion of real-world events and techniques. This course counts as a CS Elective for the CS Major. Undergraduate Prerequisite: COMPSCI 230 (or E&C-ENG 322) and COMPSCI 360 (previously COMPSCI 460 or COMPSCI 365 or COMPSCI 390R or COMPSCI 466 or E&C-ENG 371), all with a grade of C or better. 3 credits.",
    "prerequisites": "COMPSCI 230 (or E&C-ENG 322) and COMPSCI 360 (previously COMPSCI 460 or COMPSCI 365 or COMPSCI 390R or COMPSCI 466 or E&C-ENG 371), all with a grade of C or better",
    "credits": "3",
    "frequency": "Spring"
  },
  {
    "code": "COMPSCI 571",
    "title": "Data Visualization and Exploration",
    "instructors": "Hamza Mohamed Elhamdadi",
    "description": "In this course, students will learn the fundamental algorithmic and design principles of visualizing and exploring complex data. The course will cover multiple aspects of data presentation including human perception and design theory; algorithms for exploring patterns in data such as clustering, and dimensionality reduction. A wide range of statistical graphics and information visualization techniques will be covered. We will explore numerical data, relational data, temporal data, spatial data, graphs and text. Hands-on projects will be based on Python or JavaScript with D3. This course counts as an Elective toward the CS and INFORM Majors. Undergraduate Prerequisite: COMPSCI 220, or COMPSCI 230, or COMPSCI 326 with a grade of C or better. No prior knowledge of data visualization or exploration is assumed. 3 credits.",
    "prerequisites": "COMPSCI 220, or COMPSCI 230, or COMPSCI 326 with a grade of C or better",
    "credits": "3",
    "frequency": "Spring"
  },
  {
    "code": "COMPSCI 575",
    "title": "Combinatorics and Graph Theory",
    "instructors": "Recently: Mark Wilson, Marius Minea, Alejandro Borrero, David Barrington",
    "description": "Cross-listed with Math 513. A basic introduction to combinatorics and graph theory for advanced students in computer science, mathematics, and related fields. Topics include elements of graph theory, Euler and Hamiltonian circuits, graph coloring, matching, basic counting methods; generating functions; recurrences; inclusion-exclusion; Polya's theory of counting.",
    "prerequisites": "Open to juniors and seniors who have completed either COMPSCI 250 or MATH 455 with a grade of B or better. Math 411 is recommended but not required.",
    "credits": "3",
    "frequency": "Even Fall"
  },
  {
    "code": "COMPSCI 590AB",
    "title": "Quantum Cryptography",
    "instructors": "Filip Rozpedek",
    "description": "The ability to transmit quantum information over long distances will enable implementation of many fascinating quantum communication tasks and provide us with novel capabilities that reach beyond what we can do over classical Internet alone. Examples of such tasks include blind quantum computing, clock synchronization or distributed quantum computing. Quantum cryptography is one family of such tasks with the most famous one being quantum key distribution. This task, which is currently the most mature quantum technology, enables distribution of shared keys through a protocol that is information-theoretically secure and whose security remarkably is guaranteed by the laws of quantum physics. Such unconditional security cannot be achieved in the classical world. In this course we will introduce the world of quantum cryptographic protocols and describe how the power of quantum mechanics can enable distribution of shared secret keys even with untrusted devices. It will also introduce many other fascinating quantum protocols beyond quantum key distribution. The course will meet jointly with the course 690BB which covers the same material. Unlike 690BB this course does not include a project as one of the assessment components and it puts more grade weight on the homework. Students who take this course cannot simultaneously, nor later, enroll in 690BB. This course counts as a CS Elective for the CS Major. Undergraduate Prerequisite: MATH 132 and MATH 235 and COMPSCI 240 (or STATISTC 315/515 or PHYSICS 281 or PHYSICS 287) all with a grade of C or better. 3 credits",
    "prerequisites": "MATH 132 and MATH 235 and COMPSCI 240 (or STATISTC 315/515 or PHYSICS 281 or PHYSICS 287) all with a grade of C or better",
    "credits": "3",
    "frequency": "Spring"
  },
  {
    "code": "COMPSCI 590AE",
    "title": "Mobile and Wireless Networks",
    "instructors": "James Kurose",
    "description": "This course covers wireless networking and mobility principles and practice. The focus of \"practice\" is primarily 802.11 (WiFi) and 4G/5G cellular networks. Unlike many other wireless networking courses, this course focuses primarily on the networking and systems aspects of wireless and mobile networks, rather than on the wireless channel aspects. This course counts as a CS Elective for the CS Major. Undergraduate Prerequisite: COMPSCI 453 or E&C-ENG 374 with a grade of C or better. 3 credits.",
    "prerequisites": "COMPSCI 453 or E&C-ENG 374 with a grade of C or better",
    "credits": "3",
    "frequency": "Spring"
  },
  {
    "code": "COMPSCI 590QC",
    "title": "Quantum Communication",
    "instructors": "Gayane Vardoyan",
    "description": "This course will provide an introduction to fundamental principles underlying quantum communication, including quantum repeaters, entanglement, and other tools needed for the implementation of distributed quantum protocols. Topics include: basics of quantum computation and information; modeling and coping with noise in quantum systems; entanglement generation schemes; quantum Internet and its applications. This course counts as a CS Elective for the CS Major. Undergraduate Prerequisite: MATH 235 and COMPSCI 240 (or STATISTC 315/515), both with a grade of C or better. 3 credits",
    "prerequisites": "MATH 235 and COMPSCI 240 (or STATISTC 315/515), both with a grade of C or better",
    "credits": "3",
    "frequency": null
  },
  {
    "code": "COMPSCI 596C",
    "title": "Independent Study - Complexity Theory",
    "instructors": "David Barrington",
    "description": "Group study of the textbook \"Computational Complexity: A Modern Approach\" by Arora and Barak. Students will prepare and present material from this book in each lecture, on a rotating basis. Evaluation will be based on the individual presentations -- no exams, possible problem sets. Does not count toward the CS or INFORM Major. 3 credits.",
    "prerequisites": "N/A",
    "credits": "3",
    "frequency": null
  },
  {
    "code": "COMPSCI 603",
    "title": "Robotics",
    "instructors": "Hao Zhang",
    "description": "This course is intended to serve as an advanced overview of robotics spanning the complete autonomy loop: perception, planning, and control. We will study the theory, algorithms, and efficient implementations related to these topics, with focus on open discussions for how to do research to go beyond the state of the art. Students will gain hands-on experience in implementing, and extending such algorithms using simulations. 3 credits.",
    "prerequisites": "N/A",
    "credits": "3",
    "frequency": "Spring"
  },
  {
    "code": "COMPSCI 627",
    "title": "Fixing Social Media",
    "instructors": "Ethan Zuckerman",
    "description": "Over the past decade, user-generated participatory media social media has emerged as the dominant model for content of the Internet. From Facebook to Twitter, YouTube to Wikipedia, content created by non-professionals and circulated for commercial and non-commercial motives underpins seven of the top 10 websites in the US, and has become an increasingly important component of the news ecosystem. While social media was initially hailed as a powerful tool for broadening civic participation, many problems have emerged with the rise of the medium, from questions of whether social media usage is bad for our individual mental health, to whether the fabric of our democracy is being damaged by disinformation, fragmentation and hyperpolarization. As legislators look to regulate these platforms and commentators propose shutting them down entirely, this course looks for an alternative: affirmative visions of social media that are good for individuals and society, which we could work towards building. This class examines possible problems with existing modes of social media, discusses ways in which social media could be a benefit to individuals and societies, develops case studies of successful and healthy online communities, and ultimately designs and builds tools to improve existing social media systems or replace them with novel models. Students will write reflectively about weekly readings and discussions and participate in multi-week projects, ultimately building teams to work on final projects. Meets with COMM 627 and SPP 627. 3 credits.",
    "prerequisites": "N/A",
    "credits": "3",
    "frequency": "Spring"
  },
  {
    "code": "COMPSCI 645",
    "title": "Database Design and Implementation",
    "instructors": "Marco Serafini",
    "description": "This course covers the design and implementation of traditional relational database systems as well as advanced data management systems. The course will treat fundamental principles of databases such as the relational model, conceptual design, and schema refinement. We will also cover core database implementation issues including storage and indexing, query processing and optimization, and transaction management. Additionally, we will address challenges in modern information systems, including scalability and parallelization, big data systems, cloud databases, dealing with graph and vector data, and the integration of database management systems and machine learning. 3 credits.",
    "prerequisites": "N/A",
    "credits": "3",
    "frequency": "Spring"
  },
  {
    "code": "COMPSCI 651",
    "title": "Optimization in Computer Science",
    "instructors": "Madalina Fiterau Brostean",
    "description": "Much recent work in computer science in a variety of areas, from game theory to machine learning and sensor networks, exploits sophisticated methods of optimization. This course is intended to give students an in-depth background in both the foundations as well as some recent trends in the theory and practice of optimization for computer science. The Optimization course covers these topics, which are critical to a large number of research projects conducted within the department. 3 credits.",
    "prerequisites": "N/A",
    "credits": "3",
    "frequency": "Spring"
  },
  {
    "code": "COMPSCI 677",
    "title": "Distributed and Operating Systems",
    "instructors": "Prashant Shenoy",
    "description": "This course provides an in-depth examination of the principles of distributed systems and advanced concepts in operating systems. Covered topics include client-server programming, distributed scheduling, virtualization, cloud computing, distributed storage, security in distributed systems, distributed middleware, ubiquitous computing, and applications such as the Internet of Things, Web and peer-to-peer systems. Prerequisites: Students should be able to easily program in a high-level language such as Java, C++ or Python, have had a course on data structures, be familiar with elements of computer architecture and have had previous exposure to the operating system concepts of processes, virtual memory, and scheduling. A previous course on uniprocessor operating systems (e.g., COMPSCI 377) will be helpful but not required. 3 credits.",
    "prerequisites": "Students should be able to easily program in a high-level language such as Java, C++ or Python, have had a course on data structures, be familiar with elements of computer architecture and have had previous exposure to the operating system concepts of processes, virtual memory, and scheduling",
    "credits": "3",
    "frequency": "Spring"
  },
  {
    "code": "COMPSCI 682",
    "title": "Neural Networks: A Modern Introduction",
    "instructors": "Chuang Gan",
    "description": "This course will focus on modern, practical methods for deep learning with neural networks. The course will begin with a description of simple classifiers such as perceptrons and logistic regression classifiers, and move on to standard neural networks, convolutional neural networks, some elements of recurrent neural networks, and transformers. The emphasis will be on understanding the basics and on practical application more than on theory. Many applications will be in computer vision, but we will make an effort to cover some natural language processing (NLP) applications as well.The current plan is to use Python and associated packages such as Numpy and Pytorch. Required background includes Linear Algebra, Probability and Statistics, and Multivariate Calculus. All assignments will be in the Python programming language. Open to graduate Computer Science students only. 3 credits.",
    "prerequisites": "N/A",
    "credits": "3",
    "frequency": "Fall"
  },
  {
    "code": "COMPSCI 683",
    "title": "Artificial Intelligence",
    "instructors": "Yair Zick",
    "description": "In-depth introduction to Artificial Intelligence focusing on techniques that allow intelligent systems to reason effectively with uncertain information and cope limited computational resources. Topics include: problem-solving using search, heuristic search techniques, constraint satisfaction, local search, abstraction and hierarchical search, resource-bounded search techniques, principles of knowledge representation and reasoning, logical inference, reasoning under uncertainty, belief networks, decision theoretic reasoning, representing and reasoning about preferences, planning under uncertainty using Markov decision processes, multi-agent systems, and computational models of bounded rationality. 3 credits.",
    "prerequisites": "N/A",
    "credits": "3",
    "frequency": "Spring"
  },
  {
    "code": "COMPSCI 685",
    "title": "Advanced Natural Language Processing",
    "instructors": "Haw-Shiuan Chang",
    "description": "This course will broadly deal with deep learning methods for natural language processing, with a specific focus on large language models. Most of the semester will focus on neural language models. It is intended for graduate students in computer science and linguistics who are (1) interested in learning about cutting-edge research progress in NLP and (2) familiar with machine learning fundamentals. We will cover modeling architectures, training objectives, and downstream tasks (e.g., text classification, question answering, and text generation). Coursework includes programming assignments and a final project. 3 credits.",
    "prerequisites": "N/A",
    "credits": "3",
    "frequency": "Fall and Spring"
  },
  {
    "code": "COMPSCI 690BB",
    "title": "Quantum Cryptography",
    "instructors": "Filip Rozpedek",
    "description": "The ability to transmit quantum information over long distances will enable implementation of many fascinating quantum communication tasks and provide us with novel capabilities that reach beyond what we can do over classical Internet alone. Examples of such tasks include blind quantum computing, clock synchronization or distributed quantum computing. Quantum cryptography is one family of such tasks with the most famous one being quantum key distribution. This task, which is currently the most mature quantum technology, enables distribution of shared keys through a protocol that is information-theoretically secure and whose security remarkably is guaranteed by the laws of quantum physics. Such unconditional security cannot be achieved in the classical world. In this course we will introduce the world of quantum cryptographic protocols and describe how the power of quantum mechanics can enable distribution of shared secret keys even with untrusted devices. It will also introduce many other fascinating quantum protocols beyond quantum key distribution. The course will meet jointly with the course 590AB which covers the same material. Unlike 590AB this course includes a project as one of the assessment components and it puts less grade weight on the homework. Students who take this course cannot simultaneously, nor later, enroll in 590AB. 3 credits.",
    "prerequisites": "N/A",
    "credits": "3",
    "frequency": "Spring"
  },
  {
    "code": "COMPSCI 690G",
    "title": "Security for Large-Scale Systems",
    "instructors": "Pubali Datta",
    "description": "This course provides an in-depth examination of the issues in system security, and assumes prior knowledge of operating system concepts. We will start with learning the classic approaches to security attacks and defenses from the perspective of a single host system. Topics include access control, information flow control, system auditing, privilege separation, security policies, host-based intrusion detection etc. Then we will study how these classic mechanisms are expanded and adapted to modern distributed system platforms such as cloud platforms, Internet of Things platforms, and large enterprises. 3 credits.",
    "prerequisites": "N/A",
    "credits": "3",
    "frequency": "Spring"
  },
  {
    "code": "COMPSCI 690QC",
    "title": "Quantum Communication",
    "instructors": "Gayane Vardoyan",
    "description": "This course will provide an introduction to fundamental principles underlying quantum communication, including quantum repeaters, entanglement, and other tools needed for the implementation of distributed quantum protocols. Topics include: basics of quantum computation and information; modeling and coping with noise in quantum systems; entanglement generation schemes; quantum Internet and its applications. 3 credits",
    "prerequisites": "N/A",
    "credits": "3",
    "frequency": null
  },
  {
    "code": "COMPSCI 690R",
    "title": "Computing for Digital Biomarkers in Healthcare",
    "instructors": "Sunghoon Lee",
    "description": "Computer science has played a pivotal role in developing innovative technologies to monitor patients' health conditions beyond the traditional laboratory or clinical environments. The development of clinically valid digital biomarkers can enable a wide range of applications, including the implementation of targeted behavioral interventions to drive substantial improvements in health-related outcomes, monitoring the progress of individuals undergoing interventions, and assessing the efficacy of emerging therapeutic interventions as an endpoint. In this course, we will delve into the application of machine learning and mobile technologies in the development of digital biomarkers. Focusing on its application in the analysis of human movements, behaviors, and behavioral phenotypes, the course curriculum will encompass the fundamentals of human movement analysis, mobile and wearable sensing technologies to support remote human movement monitoring, fundamentals of signal processing techniques, and state-of-the-art machine learning techniques, all with the overarching goal of developing a reliable, responsive, and valid digital biomarker for motor deficits. In addition, we will cover essential topics such as human subject study design (e.g., randomized controlled trials) and hypothesis testing (e.g., t-test, ANOVA, correlation test, etc.). These skills are crucial for their application within the realm of clinical sciences, especially when it comes to assessing the effectiveness of emerging healthcare and wellness technologies. This course contains lectures, assignments, a final project, paper presentations, and critical discussions. 3 credits.",
    "prerequisites": "N/A",
    "credits": "3",
    "frequency": "Spring"
  },
  {
    "code": "COMPSCI 690U",
    "title": "Computational Biology and Bioinformatics",
    "instructors": "Anna Green",
    "description": "This course is designed to provide computer scientists with a comprehensive introduction to the field of computational biology. The course will cover the application of computational techniques to modern research challenges in biology, discussing both foundational algorithms and newly introduced methods. The necessary background on biology will be provided in order to contextualize the methods. The primary focus will be analysis of genomic data, including variant calling, genome annotation, sequence search, sequence alignment, phylogeny construction, mutation effect prediction, population genetics, and genotype-phenotype association studies. We will also cover protein structure analysis and prediction. Throughout the course, we will emphasize the unique challenges to working with biological data. Through lectures and hands-on programming problem sets, students will develop the necessary skills to tackle computational challenges in the field of biology. 3 credits.",
    "prerequisites": "N/A",
    "credits": "3",
    "frequency": "Spring"
  },
  {
    "code": "COMPSCI 691O",
    "title": "Seminar - Tools for Explanatory and Tutoring Systems",
    "instructors": "Beverly Woolf",
    "description": "Artificial Intelligence will radically change education. Through machine learning, data mining, analytics, robotics, and user models, AI will replace false learning boundaries (e.g., learning places, time, level of study); personalize learning; make learning instantly available to everyone; connect learners with partners; provide multi-media; and augment human learning ability. This seminar examines recent work in explanatory and tutoring systems, presents theories about digital teaching and learning, and describes how to deliver personalized teaching in online systems. Such software supports people working alone or in collaborative inquiry to rapidly access and integrate global information. This course describes how to build tutors, stimulates awareness of research issues, and promotes sound analytic and design skills. Specific topics include systems that support collaboration, inquiry, natural language dialogue, authoring tools and user models. The course is appropriate for students from many disciplines (e.g., computer science, linguistics, education, and psychology), researchers, and practitioners from academia, industry, and government. No programming is required. Students will read and critique papers about AI tools (e.g., vision, natural language), methods, and will study the complexity of human learning through advances in cognitive science. Weekly assignments invite students to critique the literature and a final project requires a detailed specification (not a program) for a tutor on your chosen topic. Students present readings from the research literature and several working systems will be available for hands-on or virtual critique. 3 credits.",
    "prerequisites": "N/A",
    "credits": "3",
    "frequency": "Spring"
  },
  {
    "code": "COMPSCI 692DQ",
    "title": "Seminar - Topics in Distributed Quantum Computing",
    "instructors": "Donald Towsley, Gayane Vardoyan",
    "description": "This seminar focuses on distributed quantum computing (DQC). Topics include but are not limited to circuit knitting; architectures and platforms suitable for DQC; fault tolerance, magic state distillation, and quantum error correcting codes for DQC; applications that can be supported with DQC; the effects of topology and limited interconnectivity; the role of entanglement in DQC; cloud-based quantum computation with remote clients; resource management and scheduling. All students taking the seminar for credit will be expected to present papers on these topics and to participate in classroom discussion. Students taking the seminar for 3 credits will be expected to propose and complete a project. The main objective of this seminar is to bring everyone, including instructors, up to speed regarding the state of the art in distributed quantum computation. 1-3 credits.",
    "prerequisites": "N/A",
    "credits": "3",
    "frequency": null
  },
  {
    "code": "COMPSCI 692EF",
    "title": "Seminar - Embedded Models for IoT and Health",
    "instructors": "Deepak Ganesan, Phuc Nguyen",
    "description": "The deployment of foundation models in resource-constrained mobile and wearable devices presents unique challenges and opportunities, particularly in health and wearable sensing applications. This advanced seminar explores the cutting-edge intersection of large AI models, embedded systems, and digital health, with a focus on real-world applications in wearable and mobile biosignal sensing platforms. The course examines two primary themes: (1) the application of foundation models in multimodal biosignal sensing contexts, including real-time physiological monitoring, neural signal processing, behavioral understanding, and clinical decision support through wearable devices such as EEG headsets, smartwatches, smart rings, eyewear, and earables; and (2) the technical challenges and solutions for deploying these powerful models on resource-constrained devices, including model compression, efficient inference, on-device learning, and real-time processing requirements. Example topics will include: Application Domains in Health and Wearables, Systems Optimizations and Architecture, IoT Applications and Environments. The course will primarily consist of paper readings, presentations, and discussions. Students will critically examine recent advances in the field through both academic papers and industry developments. For 3-credit option, a semester-long research project is required, involving either the development of a novel application using foundation models on wearable platforms or the implementation of optimization techniques for embedded deployment. 1-3 credits.",
    "prerequisites": "N/A",
    "credits": "3",
    "frequency": null
  },
  {
    "code": "COMPSCI 692L",
    "title": "Seminar - Natural Language Processing",
    "instructors": "Brendan O'Connor",
    "description": "Weekly seminar requiring students to read an NLP paper and discuss and review it from a variety of perspectives. Some weeks will feature invited speakers instead of paper reviews. 1 credit.",
    "prerequisites": "N/A",
    "credits": "1",
    "frequency": "Fall and Spring"
  },
  {
    "code": "COMPSCI 692PA",
    "title": "Seminar - Advanced Topics on Privacy and Security for Generative Models",
    "instructors": "Eugene Bagdasarian",
    "description": "New capabilities of language and diffusion models enable applications that interact with users across different modalities, perform independent actions, and leverage external tools. In the seminar, we will study how these capabilities create new privacy and security challenges by analyzing recent papers in ML and S&P communities and connecting discovered problems to fundamental issues from previous decades. As part of the course there will be an opportunity to conduct a research project that goes deeper into these problems. 1 credit.",
    "prerequisites": "N/A",
    "credits": "1",
    "frequency": null
  },
  {
    "code": "COMPSCI 696DS",
    "title": "Independent Study - Data Science",
    "instructors": "Andrew McCallum",
    "description": "The goal of this course is to provide Professional Masters students withindustry mentorship and real-world data science training.Beyond-classroom educational opportunities are an excellent way to gain practical experience on a substantial project, to learn advanced skills, to collaborate with a professional PhD researcher, to form a connection to a data science company, and to work in a team with other graduate students.Industry partners propose semester-long data science projects.Students form three-to-five-person teams, each of which work on one project throughout the semester, under the guidance of their industry mentor, additional PhD student mentors, and the course faculty instructor.Furthermore, in weekly class meetings all students receive professional development education, data science hardware and software infrastructure training, data science research presentations, and career advice.Student teams gain valuable oral presentation experience and feedback by regularly presenting their work-in-progress, as well as a final public presentation of their project at the end of the semester.Advantages of these industry relationships often include access to rich industry-scale data, learning about real-world problems, and making industry connections useful for the future. Prerequisites: Enrollment in the CICS Professional Masters Program; by the end of previous semester have completed at least two of the Data Science core requirements; a grade point average of 3.0 or higher. 3 credits.",
    "prerequisites": "Enrollment in the CICS Professional Masters Program; by the end of previous semester have completed at least two of the Data Science core requirements; a grade point average of 3",
    "credits": "3",
    "frequency": null
  },
  {
    "code": "COMPSCI H311",
    "title": "Honors Colloquium for Introduction to Algorithms",
    "instructors": "Marius Minea",
    "description": "The design and analysis of efficient algorithms for important computational problems. Emphasis on the relationships between algorithms and data structures and on measures of algorithmic efficiency. Advanced graph algorithms, dynamic programming applications, NP-completeness and space complexity, approximation and randomized algorithms. Experimental analysis of algorithms also emphasized. Use of computer required. Prerequisite: CICS 210 (or COMPSCI 187) and COMPSCI 250 (or MATH 455) all with a grade of C or better (or COMPSCI 311 with a grade of B or better). 1 credit.",
    "prerequisites": "CICS 210 (or COMPSCI 187) and COMPSCI 250 (or MATH 455) all with a grade of C or better (or COMPSCI 311 with a grade of B or better)",
    "credits": "1",
    "frequency": null
  },
  {
    "code": "COMPSCI H345",
    "title": "Honors Colloquium for Practice and Applications of Data Management",
    "instructors": "Gordon Anderson",
    "description": "Students will study in depth data management topics covered in class. Activities include discussions with the professor and TA, readings, and a project. The project is a semester-long group activity that combines several advanced topics into a practical application. Prerequisite: CS MAJORS: CICS 210 (or COMPSCI 187) with a grade of C or better (or COMPSCI 345 with a grade of B or better); INFORM MAJORS: INFO 248 and CICS 160 (previously INFO 190T or COMPSCI 186 or COMPSCI 187), all with a grade of C or better (or COMPSCI 345 with a grade of B or better). 1 credit.",
    "prerequisites": "CS MAJORS: CICS 210 (or COMPSCI 187) with a grade of C or better (or COMPSCI 345 with a grade of B or better); INFORM MAJORS: INFO 248 and CICS 160 (previously INFO 190T or COMPSCI 186 or COMPSCI 187), all with a grade of C or better (or COMPSCI 345 with a grade of B or better)",
    "credits": "1",
    "frequency": null
  },
  {
    "code": "INFO 490PI",
    "title": "Personal Health Informatics",
    "instructors": "Ravi Karkar",
    "description": "This course will cover the design of personal health and wellness technologies. Using the personal health informatics model, we will learn various challenges in designing technologies for personal health data collection (e.g., step count, heart rate, or food intake etc.), integration, self-reflection, and behavior change. Going further, students will understand design issues in sharing personal health data and discuss design guidelines for collaborative data collection, reflection, and care. It is difficult to create health technologies that can successfully be integrated into people s daily life due to many obstacles in individuals data collection, integration, self-reflection, and sharing practices. Understanding these challenges is an important part of designing Health Technologies. Therefore, this course will cover HCI and design thinking methods that students can leverage to understand the adoption and use of Health Technologies and to design effective Health Technologies. Moreover, visualizations facilitate people to gain insights from their data, so we will cover common visualization approaches used in the personal data contexts. Students will apply the design issues taught during lecture to a team-based semester-long personal health application design project. This course satisfies the IE requirement for Informatics majors and it also counts as an elective for all concentrations of the Informatics major. Prerequisite: INFO 248 (or COMPSCI 240) and CICS 210 (or COMPSCI 186 or COMPSCI 187)all with a grade of C or better. 4 credits.",
    "prerequisites": "INFO 248 (or COMPSCI 240) and CICS 210 (or COMPSCI 186 or COMPSCI 187)all with a grade of C or better",
    "credits": "4",
    "frequency": "Spring"
  },
  {
    "code": "INFO H490PI",
    "title": "Honors Colloquium for Personal Health Informatics",
    "instructors": "Ravi Karkar",
    "description": "This colloquium will dive deeper into issues related to design of personal health technologies. You will study examples of existing platforms, read relevant publications, and will produce a critical reflection on the state and future direction of the field.",
    "prerequisites": "N/A",
    "credits": "N/A",
    "frequency": "Spring"
  }
]